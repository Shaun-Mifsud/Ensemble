{"version":3,"file":"src_app_testing_testing_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEV;AAE7C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sDAAW;KACvB;CACF,CAAC;IAMW,wBAAwB,SAAxB,wBAAwB;CAAG;AAA3B,wBAAwB;IAJpC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,wBAAwB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBI;AACM;AACF;AAEA;AAEuB;AAEvB;AAEI;IAYpC,iBAAiB,SAAjB,iBAAiB;CAAG;AAApB,iBAAiB;IAV7B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,6EAAwB;YACxB,2DAAe;SAChB;QACD,YAAY,EAAE,CAAC,sDAAW,CAAC;KAC5B,CAAC;GACW,iBAAiB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACtBoB;AACnB;IAQlB,WAAW,SAAX,WAAW;IAKtB;QAHA,KAAK;QACL,WAAM,GAAG,sBAAsB,CAAC;IAEhB,CAAC;IAEjB,QAAQ;QACN,MAAM,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QACxD,MAAM,KAAK,GAAG,IAAI,mDAAK,CAAC,SAAS,EAAE;YACjC,WAAW,EAAE;gBACX,KAAK,EAAE,0BAA0B;gBACjC,gBAAgB,EAAE,KAAK;gBACvB,MAAM,EAAC,YAAY;gBACnB,aAAa,EAAC,KAAK;gBACnB,QAAQ,EAAC,OAAO;gBAChB,cAAc,EAAC,MAAM;gBACrB,aAAa,EAAC,MAAM;gBACpB,YAAY,EAAC,SAAS;aAEvB;SACF,CAAC,CAAC;QAEH,KAAK,CAAC,8BAA8B,CAAC;aACpC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;aACjC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;aACpC,IAAI,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,QAAQ,CACxB;YACE,EAAE,EAAE,OAAO;YACX,IAAI,EAAE,SAAS;YACf,OAAO,EAAE,aAAa;YACtB,qBAAqB,EAAE;gBACrB,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,EAAC;gBACxD,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE;aAC1B;SACF,CACF,CAAC;aAED,IAAI,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;aAC3C,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IAIxC,CAAC;CAEF;;AA7CY,WAAW;IALvB,wDAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,oEAAkC;;KAEnC,CAAC;GACW,WAAW,CA6CvB;AA7CuB","sources":["./src/app/testing/testing-routing.module.ts","./src/app/testing/testing.module.ts","./src/app/testing/testing.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TestingPage } from './testing.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TestingPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TestingPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { TestingPageRoutingModule } from './testing-routing.module';\r\n\r\nimport { TestingPage } from './testing.page';\r\n\r\nimport { PdfViewerModule } from 'ng2-pdf-viewer';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TestingPageRoutingModule,\r\n    PdfViewerModule\r\n  ],\r\n  declarations: [TestingPage]\r\n})\r\nexport class TestingPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport Embed from 'flat-embed';\r\n\r\n\r\n@Component({\r\n  selector: 'app-testing',\r\n  templateUrl: './testing.page.html',\r\n  styleUrls: ['./testing.page.scss'],\r\n})\r\nexport class TestingPage implements OnInit {\r\n\r\n  //PDF\r\n  pdfSrc = \"assets/pdf/aflat.pdf\";\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    const container = document.getElementById('sheetmusic');\r\n    const embed = new Embed(container, {\r\n      embedParams: {\r\n        appId: '59e7684b476cba39490801c2',\r\n        controlsPosition: 'top',\r\n        layout:'responsive',\r\n        videoPosition:'top',\r\n        branding:'false',\r\n        controlDisplay:'true',\r\n        controlsParts:'true',\r\n        themePrimary:'#0B1A33'\r\n\r\n      }\r\n    });\r\n\r\n    fetch('/assets/musicXML/G_Minor.xml')\r\n    .then(response => response.text())\r\n    .then(xml => embed.loadMusicXML(xml))\r\n    .then(() => embed.setTrack(\r\n      {\r\n        id: 'aflat',\r\n        type: 'youtube',\r\n        mediaId: 'Hv4Jylc_Kq4',\r\n        synchronizationPoints: [\r\n          { type: 'measure', time: 5, location: { measureIdx: 0 }},\r\n          { type: 'end', time: 58 }\r\n        ],\r\n      }\r\n    ))\r\n    \r\n    .then(() => embed.useTrack({ id: 'aflat' }))\r\n    .catch(error => console.error(error));\r\n\r\n\r\n\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}