{"version":3,"file":"src_app_score_score_module_ts.js","mappings":"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","sources":["./src/app/score/score-routing.module.ts","./src/app/score/score.module.ts","./src/app/score/score.page.ts","./node_modules/recordrtc/RecordRTC.js"],"sourcesContent":["import { Component, NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { Tab2Page } from '../tab2/tab2.page';\r\n\r\nimport { ScorePage } from './score.page';\r\n\r\n\r\nimport { CommonModule } from '@angular/common';\r\n\r\nconst routes: Routes = [\r\n/*     {\r\n    path: '',\r\n    children:[\r\n      //if NO scoreID is present, redirect to tabs/tab2\r\n      {\r\n        path: '',\r\n        redirectTo: '/tabs/tab2',\r\n        pathMatch: 'full'\r\n      },\r\n\r\n      //if scoreID is present, load score page\r\n      {\r\n        path:':scoreID',\r\n        children:[\r\n          {\r\n            //score by ID\r\n            path: '',\r\n            children:[\r\n              {                \r\n                path: '',\r\n                component: ScorePage\r\n              },\r\n              //score part\r\n              {\r\n                path:':scorePart',\r\n                component:ScorePage\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  } */\r\n\r\n  {\r\n    path: '',\r\n    children:[\r\n      {\r\n        path:'',\r\n        component:ScorePage\r\n    },\r\n      {\r\n        path:':scoreID',\r\n        component: ScorePage\r\n      }\r\n    ]\r\n  }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes),CommonModule],\r\n  exports: [RouterModule,CommonModule],\r\n})\r\nexport class ScorePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ScorePageRoutingModule } from './score-routing.module';\r\n\r\nimport { ScorePage } from './score.page';\r\n\r\nimport { PdfViewerModule } from 'ng2-pdf-viewer';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ScorePageRoutingModule,\r\n    PdfViewerModule\r\n  ],\r\n  declarations: [ScorePage]\r\n})\r\nexport class ScorePageModule {}\r\n","import { LEADING_TRIVIA_CHARS } from '@angular/compiler/src/render3/view/template';\r\nimport { Component, ElementRef, OnInit } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ActivatedRoute} from '@angular/router';\r\nimport { ModalController, PopoverController } from '@ionic/angular';\r\n\r\nimport Embed from 'flat-embed';\r\nimport { MetronomeComponent } from '../components/metronome/metronome.component';\r\nimport { PageScaleComponent } from '../components/page-scale/page-scale.component';\r\nimport { RecordingComponent } from '../components/recording/recording.component';\r\nimport { TunerComponent } from '../components/tuner/tuner.component';\r\nimport { RecordingConfirmComponent } from '../components/recordingConfirm/recording-confirm.component';\r\n\r\nimport { EnsembleService } from '../services/ensemble.service';\r\nimport { ToolsService } from '../services/tools.service';\r\nimport { Part, Recording, Score } from '../struct/ensemble';\r\n\r\nimport * as Tone from 'tone';\r\nimport {Howl, Howler} from 'howler'; \r\n\r\ndeclare var $: any;\r\nimport * as RecordRTC from 'recordrtc';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-score',\r\n  templateUrl: './score.page.html',\r\n  styleUrls: ['./score.page.scss'],\r\n})\r\nexport class ScorePage implements OnInit {\r\n\r\n\r\n  rotationSubscription:any;\r\n  zoomScaleSubscription:any;\r\n\r\n  public scoreID:any;\r\n  public partID:any;\r\n\r\n  public selectedScore: Score | undefined;\r\n  public selectedPart: Part | undefined;\r\n\r\n  public pdfSrc: any;\r\n  public rotation = 0;\r\n  public zoom=1;\r\n  public zoomScale:'page-width'|'page-fit'|'page-height';\r\n  public currentPage:number= 1;\r\n  public noOfPages:number;\r\n\r\n  //recording\r\n  tempRecord:any;\r\n  recordingCount:number;\r\n  newRecordingName:string;\r\n  base64:any;\r\n\r\n  currentRecording:Recording = {id:0,scoreID:0,partID:0,name:'',base64:''};\r\n  recordings:Recording[];\r\n\r\n  url:any;\r\n  error:any\r\n  isRecording=false;\r\n\r\n\r\n  sound= new Audio;\r\n  public metronomeIsPlaying:boolean= false;\r\n\r\n  countdownBegan = false;     // flags that you want the countdown to start\r\n  stopIn = 5000;    // how long the timer should run\r\n  stopTime = 0;     // used to hold the stop time\r\n  stop = false;     // flag to indicate that stop time has been reached\r\n  timeTillStop = 0; // holds the display time\r\n\r\n\r\n  constructor(private route:ActivatedRoute,\r\n              public ensembleService:EnsembleService,\r\n              public tools:ToolsService,\r\n              public popoverController:PopoverController,\r\n              private modalCtrl:ModalController,\r\n              private modalCtrl2:ModalController,\r\n              private domSanitizer: DomSanitizer\r\n            ) \r\n  { }\r\n\r\n  \r\n    handleValue(value) {\r\n      console.log(value); //SlideRuler return value\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.countdownBegan=false;\r\n    console.log(\"in score page\");\r\n    \r\n\r\n    //get ID the user selected from URL\r\n    this.scoreID=parseInt(this.route.snapshot.params['scoreID']);\r\n    \r\n    //get score by scoreID\r\n    this.selectedScore=this.ensembleService.getScoreByID(this.scoreID);\r\n    \r\n    //get part by URL\r\n    this.partID=parseInt(this.route.snapshot.params['scorePart']);\r\n    console.log('PARTID: ', this.partID);\r\n\r\n    if(this.partID ==0){ \r\n      //get fullscore by URL\r\n      console.log(\"PART ID IS: \",this.partID);\r\n      \r\n      this.pdfSrc=this.selectedScore.fullScorePath;\r\n    }\r\n      \r\n    else{\r\n      this.selectedPart = this.selectedScore.parts[this.partID-1]; // <-- can this be an issue since the index and partID is 1 number different ?\r\n    }\r\n    \r\n\r\n    if(this.selectedScore.type == \"static\"){\r\n      console.log(\"static score\");\r\n\r\n      if(this.partID !=0){\r\n        //set PDF source by partPath\r\n        this.pdfSrc=this.selectedPart.partPath;\r\n        console.log(\"Selected score: \", this.selectedScore);\r\n      }\r\n    } \r\n\r\n    if(this.selectedScore.type == \"interactive\"){\r\n      console.log(\"interactive score\");\r\n      \r\n      const container = document.getElementById('sheetmusic');\r\n      const embed = new Embed(container, {\r\n        embedParams: {\r\n          appId: '62042cdc7544f10012e789e6', //59e7684b476cba39490801c2\r\n          controlsPosition: 'top',\r\n          layout:'responsive',\r\n          videoPosition:'top',\r\n          branding:'false',\r\n          controlDisplay:'true',\r\n          controlsParts:'true',\r\n          themePrimary:'#0B1A33'\r\n  \r\n        }\r\n      });\r\n\r\n\r\n  \r\n      fetch(this.selectedScore.fullScorePath)\r\n      .then(response => response.text())\r\n      .then(xml => embed.loadMusicXML(xml))\r\n      .then(() => embed.setTrack(\r\n        {\r\n          id: 'aflat',\r\n          type: 'youtube',\r\n          mediaId: this.selectedScore.videoPath,\r\n          synchronizationPoints: [\r\n            { type: 'measure', time: this.selectedScore.videoStart, location: { measureIdx: 0 }},\r\n            { type: 'end', time: this.selectedScore.videoEnd }\r\n          ],\r\n        }\r\n      ))\r\n      \r\n      .then(() => embed.useTrack({ id: 'aflat' }))\r\n      .catch(error => console.error(error));\r\n\r\n    }\r\n    \r\n  }\r\n\r\n  back(){\r\n    if(this.currentPage !=1){\r\n      this.currentPage = this.currentPage-1;\r\n    }\r\n\r\n  }\r\n\r\n  forward(){\r\n    if(this.currentPage !=this.noOfPages){\r\n      this.currentPage = this.currentPage+1;\r\n    }\r\n  }\r\n\r\n  pageInitialized(e: any) {\r\n    this.noOfPages= e.source._pages.length;\r\n  }\r\n\r\n    \r\n  // metronome modal\r\n  async showMetornomeModal(){\r\n    const modal = await this.modalCtrl.create({\r\n      component:MetronomeComponent,\r\n      cssClass:'metronomeModal',\r\n    })\r\n\r\n    await modal.present();\r\n  }\r\n\r\n  startMetronome(noOfBeats:number, beatValue:number){\r\n    Tone.start();\r\n    var barCount:number=0;\r\n\r\n\t\tTone.Transport.bpm.value=60;\r\n    Tone.Transport.start();\r\n\r\n    var sound = new Howl({\r\n      src: ['assets/sounds/metronome/woodblock.wav'],\r\n      onplayerror: function() {\r\n        sound.once('unlock', function() {\r\n          sound.play();\r\n\r\n        });\r\n      }\r\n    });\r\n\r\n    //this will start the player on every quarter note\r\n    Tone.Transport.scheduleRepeat(function(){\r\n      sound.play();    \r\n      barCount = barCount + 1;\r\n      console.log(\"bar count: \", barCount);\r\n      \r\n      if(barCount == noOfBeats){\r\n        barCount=0;\r\n      }\r\n\r\n      if(barCount  == 1){ \r\n        console.log(\"bar counter is 1\");\r\n\r\n        var firstBeat = new Howl({\r\n          src: ['assets/sounds/metronome/woodblockFirstBeat.wav']\r\n        });\r\n\r\n        firstBeat.play();\r\n      }\r\n      \r\n      }, \"4n\");\r\n      \r\n    this.metronomeIsPlaying= true;\r\n  }\r\n\r\n  startPlaying() {\r\n    Tone.Transport.start();\r\n  }\r\n\r\n  stopMetronome() {\r\n    Tone.Transport.cancel();\r\n    this.metronomeIsPlaying =false;\r\n  }\r\n\r\n  //tuner modal\r\n  async showTunerPopover(ev:any){\r\n    const popover = await this.popoverController.create({\r\n      component: TunerComponent,\r\n      cssClass: 'tunerPopover',\r\n      event:ev,\r\n      translucent: true\r\n    });\r\n    await popover.present();\r\n  \r\n    const { role } = await popover.onDidDismiss();\r\n    console.log('onDidDismiss resolved with role', role);\r\n  }\r\n\r\n  //page options\r\n  async pageOptions(ev:any){\r\n    const popover = await this.popoverController.create({\r\n      component: PageScaleComponent,\r\n      componentProps:{rotation: this.rotation},\r\n      cssClass: 'pageScalePopover',\r\n      event:ev,\r\n      translucent: true,\r\n    });\r\n    \r\n    await popover.present();  \r\n    \r\n    // page options\r\n    //rotation\r\n    this.rotationSubscription= this.tools.getRotationChangeEmitter()\r\n    .subscribe(rotation => this.selectedRotation(rotation));\r\n\r\n    this.zoomScale=\"page-width\";\r\n\r\n    //zoom scale\r\n    this.zoomScaleSubscription= this.tools.geZoomScaleChangeEmitter()\r\n    .subscribe(zoomScale => this.selectedZoomScale(zoomScale));\r\n\r\n    await popover.onDidDismiss().then(res=> this.ngOnDestroy(), error => console.log(\"Error: \",error));\r\n    \r\n  } \r\n\r\n  //rotation from subscription\r\n  selectedRotation(rotation:number){\r\n    this.rotation= rotation;\r\n    console.log(\"currently in selectedRotation func\");\r\n  }\r\n\r\n  //zoom scale from subscription\r\n  selectedZoomScale(zoomScale:any){    \r\n    this.zoomScale=zoomScale;\r\n    console.log(\"selecged zoom scale func: \",this.zoomScale);\r\n    \r\n  }\r\n  \r\n\r\n  //recording modal\r\n  async recordingModal() {\r\n    const modal = await this.modalCtrl.create({\r\n      component: RecordingComponent,\r\n      componentProps: {scoreID:this.scoreID, selectedPart:this.selectedPart},\r\n      cssClass: 'recordingModal',\r\n    });\r\n    await modal.present();\r\n\r\n    modal.onDidDismiss().then((data) => {\r\n      if(data.data ==\"recordingClick\"){\r\n        this.startCountdown();\r\n        this.countdownBegan=true;\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n\r\n  //start countdown\r\n  startCountdown(){\r\n    requestAnimationFrame(this.update.bind(this));  // start the countdown\r\n    this.startMetronome(4,4); //hard coded\r\n  }\r\n\r\n  update(timer){\r\n\r\n    if(this.countdownBegan){  // do we need to start the timer\r\n      this.stopTime = timer + this.stopIn; // yes the set the stoptime\r\n      this.countdownBegan = false;             // clear the start flag\r\n    }\r\n    else{                         // waiting for stop\r\n        if(timer >= this.stopTime){     // has stop time been reached?\r\n          this.stop = true;           // yes the flag to stop\r\n        }\r\n    }\r\n  \r\n    this.timeTillStop = this.stopTime - timer;      // for display of time till stop\r\n    // log() should be whatever you use to display the time.\r\n    console.log(\"time: \",Math.floor(this.timeTillStop / 1000) );  // to display in 1/100th seconds\r\n    this.timeTillStop= Math.floor(this.timeTillStop / 1000);\r\n  \r\n    if(!this.stop){\r\n        requestAnimationFrame(this.update.bind(this)); // continue animation until stop \r\n    }\r\n  \r\n    else{\r\n      console.log(\"countdown end\");\r\n      this.initiateRecording();\r\n    }\r\n  }\r\n\r\n  //recording  \r\n  initiateRecording() {\r\n    this.isRecording = true;\r\n\r\n    let mediaConstraints = {\r\n    video: false,\r\n    audio: true\r\n    };\r\n    \r\n    navigator.mediaDevices.getUserMedia(mediaConstraints).then(this.successCallback.bind(this), this.errorCallback.bind(this));\r\n    }\r\n\r\n  /**\r\n  * Will be called automatically.\r\n  */\r\n  successCallback(stream) {\r\n    \r\n    var options = {\r\n    mimeType: \"audio/wav\",\r\n    numberOfAudioChannels: 1,\r\n    desiredSampRate: 16000,\r\n    };\r\n\r\n    //Start Actuall Recording\r\n    var StereoAudioRecorder = RecordRTC.StereoAudioRecorder;\r\n    this.tempRecord = new StereoAudioRecorder(stream, options);\r\n    this.tempRecord.record();\r\n  }\r\n\r\n  /**\r\n  * Stop recording.\r\n  */\r\n  stopRecording() {\r\n    this.isRecording = false;\r\n    this.tempRecord.stop(this.processRecording.bind(this));\r\n    this.stopMetronome();\r\n  }\r\n\r\n  /**\r\n  * processRecording Do what ever you want with blob\r\n  * @param  {any} blob Blog\r\n  */\r\n  async processRecording(blob) {\r\n    this.url = URL.createObjectURL(blob);    \r\n    console.log(\"blob: \", blob);\r\n    console.log(\" url: \",this.url);\r\n    console.log('view: ', this.tempRecord.view);\r\n    console.log('newRecord: ', this.tempRecord);\r\n    \r\n    this.base64 = await this.blobToBase64(blob) as string;\r\n\r\n    // * saving recording *//\r\n\r\n    //store recordingID\r\n    this.currentRecording.id= this.recordingCount +1;\r\n    //save scoreID\r\n    this.currentRecording.scoreID= this.scoreID;\r\n    //store partID\r\n    this.currentRecording.partID= this.partID;\r\n    console.log(\"current recording part id: \",this.currentRecording.partID);\r\n    \r\n    //store name\r\n    this.currentRecording.name= this.newRecordingName;\r\n    //store url\r\n    this.currentRecording.base64= this.base64;\r\n\r\n    //open recording confirm modal and save there\r\n    this.recordingconfirmModal();\r\n\r\n    //reset the temporary variable\r\n    this.currentRecording = {id:0,scoreID:0,partID:0,name:'',base64:''};\r\n\r\n    //get the new recording count\r\n    this.recordingCount= this.ensembleService.getRecordingsLength();\r\n\r\n  }\r\n\r\n\r\n  blobToBase64(blob) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n\r\n      // if there's an error, reject\r\n      reader.onerror = reject;\r\n\r\n      reader.onloadend = () => resolve(reader.result);\r\n\r\n      reader.readAsDataURL(blob);\r\n      console.log('base64 in function:', reader);\r\n    });\r\n\r\n    \r\n  }\r\n\r\n\r\n  sanitize(url: string) {\r\n    console.log('url: ',url);\r\n    this.domSanitizer.bypassSecurityTrustResourceUrl(url);\r\n  }\r\n  \r\n  /**\r\n  * Process Error.\r\n  */\r\n  errorCallback(error) {\r\n    this.error = 'Can not play audio in your browser';\r\n  }\r\n\r\n\r\n\r\n\r\n  //recording confirm modal\r\n  async recordingconfirmModal() {\r\n    const modal = await this.modalCtrl2.create({\r\n      component: RecordingConfirmComponent,\r\n      componentProps: {currentRecording:this.currentRecording},\r\n      cssClass: 'recordingConfirmModal',\r\n    });\r\n      await modal.present();\r\n\r\n  }\r\n\r\n\r\n  \r\n  ngOnDestroy() {\r\n    if(this.rotationSubscription != undefined){\r\n      this.rotationSubscription.unsubscribe();\r\n    }\r\n\r\n    if(this.zoomScaleSubscription != undefined){\r\n      this.zoomScaleSubscription.unsubscribe();\r\n    }\r\n    \r\n    if(this.isRecording){\r\n      this.stopRecording();\r\n    }\r\n\r\n    if(this.metronomeIsPlaying){\r\n      this.stopMetronome();\r\n    }\r\n  }\r\n\r\n  \r\n}","'use strict';\r\n\r\n// Last time updated: 2021-03-09 3:20:22 AM UTC\r\n\r\n// ________________\r\n// RecordRTC v5.6.2\r\n\r\n// Open-Sourced: https://github.com/muaz-khan/RecordRTC\r\n\r\n// --------------------------------------------------\r\n// Muaz Khan     - www.MuazKhan.com\r\n// MIT License   - www.WebRTC-Experiment.com/licence\r\n// --------------------------------------------------\r\n\r\n// ____________\r\n// RecordRTC.js\r\n\r\n/**\r\n * {@link https://github.com/muaz-khan/RecordRTC|RecordRTC} is a WebRTC JavaScript library for audio/video as well as screen activity recording. It supports Chrome, Firefox, Opera, Android, and Microsoft Edge. Platforms: Linux, Mac and Windows. \r\n * @summary Record audio, video or screen inside the browser.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTC\r\n * @class\r\n * @example\r\n * var recorder = RecordRTC(mediaStream or [arrayOfMediaStream], {\r\n *     type: 'video', // audio or video or gif or canvas\r\n *     recorderType: MediaStreamRecorder || CanvasRecorder || StereoAudioRecorder || Etc\r\n * });\r\n * recorder.startRecording();\r\n * @see For further information:\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\r\n * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, desiredSampRate: 16000, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction RecordRTC(mediaStream, config) {\r\n    if (!mediaStream) {\r\n        throw 'First parameter is required.';\r\n    }\r\n\r\n    config = config || {\r\n        type: 'video'\r\n    };\r\n\r\n    config = new RecordRTCConfiguration(mediaStream, config);\r\n\r\n    // a reference to user's recordRTC object\r\n    var self = this;\r\n\r\n    function startRecording(config2) {\r\n        if (!config.disableLogs) {\r\n            console.log('RecordRTC version: ', self.version);\r\n        }\r\n\r\n        if (!!config2) {\r\n            // allow users to set options using startRecording method\r\n            // config2 is similar to main \"config\" object (second parameter over RecordRTC constructor)\r\n            config = new RecordRTCConfiguration(mediaStream, config2);\r\n        }\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('started recording ' + config.type + ' stream.');\r\n        }\r\n\r\n        if (mediaRecorder) {\r\n            mediaRecorder.clearRecordedData();\r\n            mediaRecorder.record();\r\n\r\n            setState('recording');\r\n\r\n            if (self.recordingDuration) {\r\n                handleRecordingDuration();\r\n            }\r\n            return self;\r\n        }\r\n\r\n        initRecorder(function() {\r\n            if (self.recordingDuration) {\r\n                handleRecordingDuration();\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    function initRecorder(initCallback) {\r\n        if (initCallback) {\r\n            config.initCallback = function() {\r\n                initCallback();\r\n                initCallback = config.initCallback = null; // recorder.initRecorder should be call-backed once.\r\n            };\r\n        }\r\n\r\n        var Recorder = new GetRecorderType(mediaStream, config);\r\n\r\n        mediaRecorder = new Recorder(mediaStream, config);\r\n        mediaRecorder.record();\r\n\r\n        setState('recording');\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Initialized recorderType:', mediaRecorder.constructor.name, 'for output-type:', config.type);\r\n        }\r\n    }\r\n\r\n    function stopRecording(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state === 'paused') {\r\n            self.resumeRecording();\r\n\r\n            setTimeout(function() {\r\n                stopRecording(callback);\r\n            }, 1);\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'recording' && !config.disableLogs) {\r\n            console.warn('Recording state should be: \"recording\", however current state is: ', self.state);\r\n        }\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Stopped recording ' + config.type + ' stream.');\r\n        }\r\n\r\n        if (config.type !== 'gif') {\r\n            mediaRecorder.stop(_callback);\r\n        } else {\r\n            mediaRecorder.stop();\r\n            _callback();\r\n        }\r\n\r\n        setState('stopped');\r\n\r\n        function _callback(__blob) {\r\n            if (!mediaRecorder) {\r\n                if (typeof callback.call === 'function') {\r\n                    callback.call(self, '');\r\n                } else {\r\n                    callback('');\r\n                }\r\n                return;\r\n            }\r\n\r\n            Object.keys(mediaRecorder).forEach(function(key) {\r\n                if (typeof mediaRecorder[key] === 'function') {\r\n                    return;\r\n                }\r\n\r\n                self[key] = mediaRecorder[key];\r\n            });\r\n\r\n            var blob = mediaRecorder.blob;\r\n\r\n            if (!blob) {\r\n                if (__blob) {\r\n                    mediaRecorder.blob = blob = __blob;\r\n                } else {\r\n                    throw 'Recording failed.';\r\n                }\r\n            }\r\n\r\n            if (blob && !config.disableLogs) {\r\n                console.log(blob.type, '->', bytesToSize(blob.size));\r\n            }\r\n\r\n            if (callback) {\r\n                var url;\r\n\r\n                try {\r\n                    url = URL.createObjectURL(blob);\r\n                } catch (e) {}\r\n\r\n                if (typeof callback.call === 'function') {\r\n                    callback.call(self, url);\r\n                } else {\r\n                    callback(url);\r\n                }\r\n            }\r\n\r\n            if (!config.autoWriteToDisk) {\r\n                return;\r\n            }\r\n\r\n            getDataURL(function(dataURL) {\r\n                var parameter = {};\r\n                parameter[config.type + 'Blob'] = dataURL;\r\n                DiskStorage.Store(parameter);\r\n            });\r\n        }\r\n    }\r\n\r\n    function pauseRecording() {\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'recording') {\r\n            if (!config.disableLogs) {\r\n                console.warn('Unable to pause the recording. Recording state: ', self.state);\r\n            }\r\n            return;\r\n        }\r\n\r\n        setState('paused');\r\n\r\n        mediaRecorder.pause();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Paused recording.');\r\n        }\r\n    }\r\n\r\n    function resumeRecording() {\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'paused') {\r\n            if (!config.disableLogs) {\r\n                console.warn('Unable to resume the recording. Recording state: ', self.state);\r\n            }\r\n            return;\r\n        }\r\n\r\n        setState('recording');\r\n\r\n        // not all libs have this method yet\r\n        mediaRecorder.resume();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Resumed recording.');\r\n        }\r\n    }\r\n\r\n    function readFile(_blob) {\r\n        postMessage(new FileReaderSync().readAsDataURL(_blob));\r\n    }\r\n\r\n    function getDataURL(callback, _mediaRecorder) {\r\n        if (!callback) {\r\n            throw 'Pass a callback function over getDataURL.';\r\n        }\r\n\r\n        var blob = _mediaRecorder ? _mediaRecorder.blob : (mediaRecorder || {}).blob;\r\n\r\n        if (!blob) {\r\n            if (!config.disableLogs) {\r\n                console.warn('Blob encoder did not finish its job yet.');\r\n            }\r\n\r\n            setTimeout(function() {\r\n                getDataURL(callback, _mediaRecorder);\r\n            }, 1000);\r\n            return;\r\n        }\r\n\r\n        if (typeof Worker !== 'undefined' && !navigator.mozGetUserMedia) {\r\n            var webWorker = processInWebWorker(readFile);\r\n\r\n            webWorker.onmessage = function(event) {\r\n                callback(event.data);\r\n            };\r\n\r\n            webWorker.postMessage(blob);\r\n        } else {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(blob);\r\n            reader.onload = function(event) {\r\n                callback(event.target.result);\r\n            };\r\n        }\r\n\r\n        function processInWebWorker(_function) {\r\n            try {\r\n                var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n                    'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n                ], {\r\n                    type: 'application/javascript'\r\n                }));\r\n\r\n                var worker = new Worker(blob);\r\n                URL.revokeObjectURL(blob);\r\n                return worker;\r\n            } catch (e) {}\r\n        }\r\n    }\r\n\r\n    function handleRecordingDuration(counter) {\r\n        counter = counter || 0;\r\n\r\n        if (self.state === 'paused') {\r\n            setTimeout(function() {\r\n                handleRecordingDuration(counter);\r\n            }, 1000);\r\n            return;\r\n        }\r\n\r\n        if (self.state === 'stopped') {\r\n            return;\r\n        }\r\n\r\n        if (counter >= self.recordingDuration) {\r\n            stopRecording(self.onRecordingStopped);\r\n            return;\r\n        }\r\n\r\n        counter += 1000; // 1-second\r\n\r\n        setTimeout(function() {\r\n            handleRecordingDuration(counter);\r\n        }, 1000);\r\n    }\r\n\r\n    function setState(state) {\r\n        if (!self) {\r\n            return;\r\n        }\r\n\r\n        self.state = state;\r\n\r\n        if (typeof self.onStateChanged.call === 'function') {\r\n            self.onStateChanged.call(self, state);\r\n        } else {\r\n            self.onStateChanged(state);\r\n        }\r\n    }\r\n\r\n    var WARNING = 'It seems that recorder is destroyed or \"startRecording\" is not invoked for ' + config.type + ' recorder.';\r\n\r\n    function warningLog() {\r\n        if (config.disableLogs === true) {\r\n            return;\r\n        }\r\n\r\n        console.warn(WARNING);\r\n    }\r\n\r\n    var mediaRecorder;\r\n\r\n    var returnObject = {\r\n        /**\r\n         * This method starts the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var recorder = RecordRTC(mediaStream, {\r\n         *     type: 'video'\r\n         * });\r\n         * recorder.startRecording();\r\n         */\r\n        startRecording: startRecording,\r\n\r\n        /**\r\n         * This method stops the recording. It is strongly recommended to get \"blob\" or \"URI\" inside the callback to make sure all recorders finished their job.\r\n         * @param {function} callback - Callback to get the recorded blob.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     // use either \"this\" or \"recorder\" object; both are identical\r\n         *     video.src = this.toURL();\r\n         *     var blob = this.getBlob();\r\n         * });\r\n         */\r\n        stopRecording: stopRecording,\r\n\r\n        /**\r\n         * This method pauses the recording. You can resume recording using \"resumeRecording\" method.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo Firefox is unable to pause the recording. Fix it.\r\n         * @example\r\n         * recorder.pauseRecording();  // pause the recording\r\n         * recorder.resumeRecording(); // resume again\r\n         */\r\n        pauseRecording: pauseRecording,\r\n\r\n        /**\r\n         * This method resumes the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.pauseRecording();  // first of all, pause the recording\r\n         * recorder.resumeRecording(); // now resume it\r\n         */\r\n        resumeRecording: resumeRecording,\r\n\r\n        /**\r\n         * This method initializes the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo This method should be deprecated.\r\n         * @example\r\n         * recorder.initRecorder();\r\n         */\r\n        initRecorder: initRecorder,\r\n\r\n        /**\r\n         * Ask RecordRTC to auto-stop the recording after 5 minutes.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var fiveMinutes = 5 * 1000 * 60;\r\n         * recorder.setRecordingDuration(fiveMinutes, function() {\r\n         *    var blob = this.getBlob();\r\n         *    video.src = this.toURL();\r\n         * });\r\n         * \r\n         * // or otherwise\r\n         * recorder.setRecordingDuration(fiveMinutes).onRecordingStopped(function() {\r\n         *    var blob = this.getBlob();\r\n         *    video.src = this.toURL();\r\n         * });\r\n         */\r\n        setRecordingDuration: function(recordingDuration, callback) {\r\n            if (typeof recordingDuration === 'undefined') {\r\n                throw 'recordingDuration is required.';\r\n            }\r\n\r\n            if (typeof recordingDuration !== 'number') {\r\n                throw 'recordingDuration must be a number.';\r\n            }\r\n\r\n            self.recordingDuration = recordingDuration;\r\n            self.onRecordingStopped = callback || function() {};\r\n\r\n            return {\r\n                onRecordingStopped: function(callback) {\r\n                    self.onRecordingStopped = callback;\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * This method can be used to clear/reset all the recorded data.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo Figure out the difference between \"reset\" and \"clearRecordedData\" methods.\r\n         * @example\r\n         * recorder.clearRecordedData();\r\n         */\r\n        clearRecordedData: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            mediaRecorder.clearRecordedData();\r\n\r\n            if (!config.disableLogs) {\r\n                console.log('Cleared old recorded data.');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the recorded blob. Use this method inside the \"stopRecording\" callback.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var blob = this.getBlob();\r\n         *\r\n         *     var file = new File([blob], 'filename.webm', {\r\n         *         type: 'video/webm'\r\n         *     });\r\n         *\r\n         *     var formData = new FormData();\r\n         *     formData.append('file', file); // upload \"File\" object rather than a \"Blob\"\r\n         *     uploadToServer(formData);\r\n         * });\r\n         * @returns {Blob} Returns recorded data as \"Blob\" object.\r\n         */\r\n        getBlob: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            return mediaRecorder.blob;\r\n        },\r\n\r\n        /**\r\n         * Get data-URI instead of Blob.\r\n         * @param {function} callback - Callback to get the Data-URI.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     recorder.getDataURL(function(dataURI) {\r\n         *         video.src = dataURI;\r\n         *     });\r\n         * });\r\n         */\r\n        getDataURL: getDataURL,\r\n\r\n        /**\r\n         * Get virtual/temporary URL. Usage of this URL is limited to current tab.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     video.src = this.toURL();\r\n         * });\r\n         * @returns {String} Returns a virtual/temporary URL for the recorded \"Blob\".\r\n         */\r\n        toURL: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            return URL.createObjectURL(mediaRecorder.blob);\r\n        },\r\n\r\n        /**\r\n         * Get internal recording object (i.e. internal module) e.g. MutliStreamRecorder, MediaStreamRecorder, StereoAudioRecorder or WhammyRecorder etc.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var internalRecorder = recorder.getInternalRecorder();\r\n         * if(internalRecorder instanceof MultiStreamRecorder) {\r\n         *     internalRecorder.addStreams([newAudioStream]);\r\n         *     internalRecorder.resetVideoStreams([screenStream]);\r\n         * }\r\n         * @returns {Object} Returns internal recording object.\r\n         */\r\n        getInternalRecorder: function() {\r\n            return mediaRecorder;\r\n        },\r\n\r\n        /**\r\n         * Invoke save-as dialog to save the recorded blob into your disk.\r\n         * @param {string} fileName - Set your own file name.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     this.save('file-name');\r\n         *\r\n         *     // or manually:\r\n         *     invokeSaveAsDialog(this.getBlob(), 'filename.webm');\r\n         * });\r\n         */\r\n        save: function(fileName) {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            invokeSaveAsDialog(mediaRecorder.blob, fileName);\r\n        },\r\n\r\n        /**\r\n         * This method gets a blob from indexed-DB storage.\r\n         * @param {function} callback - Callback to get the recorded blob.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.getFromDisk(function(dataURL) {\r\n         *     video.src = dataURL;\r\n         * });\r\n         */\r\n        getFromDisk: function(callback) {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            RecordRTC.getFromDisk(config.type, callback);\r\n        },\r\n\r\n        /**\r\n         * This method appends an array of webp images to the recorded video-blob. It takes an \"array\" object.\r\n         * @type {Array.<Array>}\r\n         * @param {Array} arrayOfWebPImages - Array of webp images.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo This method should be deprecated.\r\n         * @example\r\n         * var arrayOfWebPImages = [];\r\n         * arrayOfWebPImages.push({\r\n         *     duration: index,\r\n         *     image: 'data:image/webp;base64,...'\r\n         * });\r\n         * recorder.setAdvertisementArray(arrayOfWebPImages);\r\n         */\r\n        setAdvertisementArray: function(arrayOfWebPImages) {\r\n            config.advertisement = [];\r\n\r\n            var length = arrayOfWebPImages.length;\r\n            for (var i = 0; i < length; i++) {\r\n                config.advertisement.push({\r\n                    duration: i,\r\n                    image: arrayOfWebPImages[i]\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * It is equivalent to <code class=\"str\">\"recorder.getBlob()\"</code> method. Usage of \"getBlob\" is recommended, though.\r\n         * @property {Blob} blob - Recorded Blob can be accessed using this property.\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var blob = this.blob;\r\n         *\r\n         *     // below one is recommended\r\n         *     var blob = this.getBlob();\r\n         * });\r\n         */\r\n        blob: null,\r\n\r\n        /**\r\n         * This works only with {recorderType:StereoAudioRecorder}. Use this property on \"stopRecording\" to verify the encoder's sample-rates.\r\n         * @property {number} bufferSize - Buffer-size used to encode the WAV container\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     alert('Recorder used this buffer-size: ' + this.bufferSize);\r\n         * });\r\n         */\r\n        bufferSize: 0,\r\n\r\n        /**\r\n         * This works only with {recorderType:StereoAudioRecorder}. Use this property on \"stopRecording\" to verify the encoder's sample-rates.\r\n         * @property {number} sampleRate - Sample-rates used to encode the WAV container\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     alert('Recorder used these sample-rates: ' + this.sampleRate);\r\n         * });\r\n         */\r\n        sampleRate: 0,\r\n\r\n        /**\r\n         * {recorderType:StereoAudioRecorder} returns ArrayBuffer object.\r\n         * @property {ArrayBuffer} buffer - Audio ArrayBuffer, supported only in Chrome.\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var arrayBuffer = this.buffer;\r\n         *     alert(arrayBuffer.byteLength);\r\n         * });\r\n         */\r\n        buffer: null,\r\n\r\n        /**\r\n         * This method resets the recorder. So that you can reuse single recorder instance many times.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.reset();\r\n         * recorder.startRecording();\r\n         */\r\n        reset: function() {\r\n            if (self.state === 'recording' && !config.disableLogs) {\r\n                console.warn('Stop an active recorder.');\r\n            }\r\n\r\n            if (mediaRecorder && typeof mediaRecorder.clearRecordedData === 'function') {\r\n                mediaRecorder.clearRecordedData();\r\n            }\r\n            mediaRecorder = null;\r\n            setState('inactive');\r\n            self.blob = null;\r\n        },\r\n\r\n        /**\r\n         * This method is called whenever recorder's state changes. Use this as an \"event\".\r\n         * @property {String} state - A recorder's state can be: recording, paused, stopped or inactive.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.onStateChanged = function(state) {\r\n         *     console.log('Recorder state: ', state);\r\n         * };\r\n         */\r\n        onStateChanged: function(state) {\r\n            if (!config.disableLogs) {\r\n                console.log('Recorder state changed:', state);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * A recorder can have inactive, recording, paused or stopped states.\r\n         * @property {String} state - A recorder's state can be: recording, paused, stopped or inactive.\r\n         * @memberof RecordRTC\r\n         * @static\r\n         * @readonly\r\n         * @example\r\n         * // this looper function will keep you updated about the recorder's states.\r\n         * (function looper() {\r\n         *     document.querySelector('h1').innerHTML = 'Recorder\\'s state is: ' + recorder.state;\r\n         *     if(recorder.state === 'stopped') return; // ignore+stop\r\n         *     setTimeout(looper, 1000); // update after every 3-seconds\r\n         * })();\r\n         * recorder.startRecording();\r\n         */\r\n        state: 'inactive',\r\n\r\n        /**\r\n         * Get recorder's readonly state.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @example\r\n         * var state = recorder.getState();\r\n         * @returns {String} Returns recording state.\r\n         */\r\n        getState: function() {\r\n            return self.state;\r\n        },\r\n\r\n        /**\r\n         * Destroy RecordRTC instance. Clear all recorders and objects.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @example\r\n         * recorder.destroy();\r\n         */\r\n        destroy: function() {\r\n            var disableLogsCache = config.disableLogs;\r\n\r\n            config = {\r\n                disableLogs: true\r\n            };\r\n            self.reset();\r\n            setState('destroyed');\r\n            returnObject = self = null;\r\n\r\n            if (Storage.AudioContextConstructor) {\r\n                Storage.AudioContextConstructor.close();\r\n                Storage.AudioContextConstructor = null;\r\n            }\r\n\r\n            config.disableLogs = disableLogsCache;\r\n\r\n            if (!config.disableLogs) {\r\n                console.log('RecordRTC is destroyed.');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * RecordRTC version number\r\n         * @property {String} version - Release version number.\r\n         * @memberof RecordRTC\r\n         * @static\r\n         * @readonly\r\n         * @example\r\n         * alert(recorder.version);\r\n         */\r\n        version: '5.6.2'\r\n    };\r\n\r\n    if (!this) {\r\n        self = returnObject;\r\n        return returnObject;\r\n    }\r\n\r\n    // if someone wants to use RecordRTC with the \"new\" keyword.\r\n    for (var prop in returnObject) {\r\n        this[prop] = returnObject[prop];\r\n    }\r\n\r\n    self = this;\r\n\r\n    return returnObject;\r\n}\r\n\r\nRecordRTC.version = '5.6.2';\r\n\r\nif (typeof module !== 'undefined' /* && !!module.exports*/ ) {\r\n    module.exports = RecordRTC;\r\n}\r\n\r\nif (typeof define === 'function' && define.amd) {\r\n    define('RecordRTC', [], function() {\r\n        return RecordRTC;\r\n    });\r\n}\n\r\nRecordRTC.getFromDisk = function(type, callback) {\r\n    if (!callback) {\r\n        throw 'callback is mandatory.';\r\n    }\r\n\r\n    console.log('Getting recorded ' + (type === 'all' ? 'blobs' : type + ' blob ') + ' from disk!');\r\n    DiskStorage.Fetch(function(dataURL, _type) {\r\n        if (type !== 'all' && _type === type + 'Blob' && callback) {\r\n            callback(dataURL);\r\n        }\r\n\r\n        if (type === 'all' && callback) {\r\n            callback(dataURL, _type.replace('Blob', ''));\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * This method can be used to store recorded blobs into IndexedDB storage.\r\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\r\n * @method\r\n * @memberof RecordRTC\r\n * @example\r\n * RecordRTC.writeToDisk({\r\n *     audio: audioBlob,\r\n *     video: videoBlob,\r\n *     gif  : gifBlob\r\n * });\r\n */\r\nRecordRTC.writeToDisk = function(options) {\r\n    console.log('Writing recorded blob(s) to disk!');\r\n    options = options || {};\r\n    if (options.audio && options.video && options.gif) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.video.getDataURL(function(videoDataURL) {\r\n                options.gif.getDataURL(function(gifDataURL) {\r\n                    DiskStorage.Store({\r\n                        audioBlob: audioDataURL,\r\n                        videoBlob: videoDataURL,\r\n                        gifBlob: gifDataURL\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio && options.video) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.video.getDataURL(function(videoDataURL) {\r\n                DiskStorage.Store({\r\n                    audioBlob: audioDataURL,\r\n                    videoBlob: videoDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio && options.gif) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.gif.getDataURL(function(gifDataURL) {\r\n                DiskStorage.Store({\r\n                    audioBlob: audioDataURL,\r\n                    gifBlob: gifDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.video && options.gif) {\r\n        options.video.getDataURL(function(videoDataURL) {\r\n            options.gif.getDataURL(function(gifDataURL) {\r\n                DiskStorage.Store({\r\n                    videoBlob: videoDataURL,\r\n                    gifBlob: gifDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            DiskStorage.Store({\r\n                audioBlob: audioDataURL\r\n            });\r\n        });\r\n    } else if (options.video) {\r\n        options.video.getDataURL(function(videoDataURL) {\r\n            DiskStorage.Store({\r\n                videoBlob: videoDataURL\r\n            });\r\n        });\r\n    } else if (options.gif) {\r\n        options.gif.getDataURL(function(gifDataURL) {\r\n            DiskStorage.Store({\r\n                gifBlob: gifDataURL\r\n            });\r\n        });\r\n    }\r\n};\n\r\n// __________________________\r\n// RecordRTC-Configuration.js\r\n\r\n/**\r\n * {@link RecordRTCConfiguration} is an inner/private helper for {@link RecordRTC}.\r\n * @summary It configures the 2nd parameter passed over {@link RecordRTC} and returns a valid \"config\" object.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTCConfiguration\r\n * @class\r\n * @example\r\n * var options = RecordRTCConfiguration(mediaStream, options);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, getNativeBlob:true, etc.}\r\n */\r\n\r\nfunction RecordRTCConfiguration(mediaStream, config) {\r\n    if (!config.recorderType && !config.type) {\r\n        if (!!config.audio && !!config.video) {\r\n            config.type = 'video';\r\n        } else if (!!config.audio && !config.video) {\r\n            config.type = 'audio';\r\n        }\r\n    }\r\n\r\n    if (config.recorderType && !config.type) {\r\n        if (config.recorderType === WhammyRecorder || config.recorderType === CanvasRecorder || (typeof WebAssemblyRecorder !== 'undefined' && config.recorderType === WebAssemblyRecorder)) {\r\n            config.type = 'video';\r\n        } else if (config.recorderType === GifRecorder) {\r\n            config.type = 'gif';\r\n        } else if (config.recorderType === StereoAudioRecorder) {\r\n            config.type = 'audio';\r\n        } else if (config.recorderType === MediaStreamRecorder) {\r\n            if (getTracks(mediaStream, 'audio').length && getTracks(mediaStream, 'video').length) {\r\n                config.type = 'video';\r\n            } else if (!getTracks(mediaStream, 'audio').length && getTracks(mediaStream, 'video').length) {\r\n                config.type = 'video';\r\n            } else if (getTracks(mediaStream, 'audio').length && !getTracks(mediaStream, 'video').length) {\r\n                config.type = 'audio';\r\n            } else {\r\n                // config.type = 'UnKnown';\r\n            }\r\n        }\r\n    }\r\n\r\n    if (typeof MediaStreamRecorder !== 'undefined' && typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype) {\r\n        if (!config.mimeType) {\r\n            config.mimeType = 'video/webm';\r\n        }\r\n\r\n        if (!config.type) {\r\n            config.type = config.mimeType.split('/')[0];\r\n        }\r\n\r\n        if (!config.bitsPerSecond) {\r\n            // config.bitsPerSecond = 128000;\r\n        }\r\n    }\r\n\r\n    // consider default type=audio\r\n    if (!config.type) {\r\n        if (config.mimeType) {\r\n            config.type = config.mimeType.split('/')[0];\r\n        }\r\n        if (!config.type) {\r\n            config.type = 'audio';\r\n        }\r\n    }\r\n\r\n    return config;\r\n}\n\r\n// __________________\r\n// GetRecorderType.js\r\n\r\n/**\r\n * {@link GetRecorderType} is an inner/private helper for {@link RecordRTC}.\r\n * @summary It returns best recorder-type available for your browser.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef GetRecorderType\r\n * @class\r\n * @example\r\n * var RecorderType = GetRecorderType(options);\r\n * var recorder = new RecorderType(options);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction GetRecorderType(mediaStream, config) {\r\n    var recorder;\r\n\r\n    // StereoAudioRecorder can work with all three: Edge, Firefox and Chrome\r\n    // todo: detect if it is Edge, then auto use: StereoAudioRecorder\r\n    if (isChrome || isEdge || isOpera) {\r\n        // Media Stream Recording API has not been implemented in chrome yet;\r\n        // That's why using WebAudio API to record stereo audio in WAV format\r\n        recorder = StereoAudioRecorder;\r\n    }\r\n\r\n    if (typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype && !isChrome) {\r\n        recorder = MediaStreamRecorder;\r\n    }\r\n\r\n    // video recorder (in WebM format)\r\n    if (config.type === 'video' && (isChrome || isOpera)) {\r\n        recorder = WhammyRecorder;\r\n\r\n        if (typeof WebAssemblyRecorder !== 'undefined' && typeof ReadableStream !== 'undefined') {\r\n            recorder = WebAssemblyRecorder;\r\n        }\r\n    }\r\n\r\n    // video recorder (in Gif format)\r\n    if (config.type === 'gif') {\r\n        recorder = GifRecorder;\r\n    }\r\n\r\n    // html2canvas recording!\r\n    if (config.type === 'canvas') {\r\n        recorder = CanvasRecorder;\r\n    }\r\n\r\n    if (isMediaRecorderCompatible() && recorder !== CanvasRecorder && recorder !== GifRecorder && typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype) {\r\n        if (getTracks(mediaStream, 'video').length || getTracks(mediaStream, 'audio').length) {\r\n            // audio-only recording\r\n            if (config.type === 'audio') {\r\n                if (typeof MediaRecorder.isTypeSupported === 'function' && MediaRecorder.isTypeSupported('audio/webm')) {\r\n                    recorder = MediaStreamRecorder;\r\n                }\r\n                // else recorder = StereoAudioRecorder;\r\n            } else {\r\n                // video or screen tracks\r\n                if (typeof MediaRecorder.isTypeSupported === 'function' && MediaRecorder.isTypeSupported('video/webm')) {\r\n                    recorder = MediaStreamRecorder;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (mediaStream instanceof Array && mediaStream.length) {\r\n        recorder = MultiStreamRecorder;\r\n    }\r\n\r\n    if (config.recorderType) {\r\n        recorder = config.recorderType;\r\n    }\r\n\r\n    if (!config.disableLogs && !!recorder && !!recorder.name) {\r\n        console.log('Using recorderType:', recorder.name || recorder.constructor.name);\r\n    }\r\n\r\n    if (!recorder && isSafari) {\r\n        recorder = MediaStreamRecorder;\r\n    }\r\n\r\n    return recorder;\r\n}\n\r\n// _____________\r\n// MRecordRTC.js\r\n\r\n/**\r\n * MRecordRTC runs on top of {@link RecordRTC} to bring multiple recordings in a single place, by providing simple API.\r\n * @summary MRecordRTC stands for \"Multiple-RecordRTC\".\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef MRecordRTC\r\n * @class\r\n * @example\r\n * var recorder = new MRecordRTC();\r\n * recorder.addStream(MediaStream);\r\n * recorder.mediaType = {\r\n *     audio: true, // or StereoAudioRecorder or MediaStreamRecorder\r\n *     video: true, // or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder\r\n *     gif: true    // or GifRecorder\r\n * };\r\n * // mimeType is optional and should be set only in advance cases.\r\n * recorder.mimeType = {\r\n *     audio: 'audio/wav',\r\n *     video: 'video/webm',\r\n *     gif:   'image/gif'\r\n * };\r\n * recorder.startRecording();\r\n * @see For further information:\r\n * @see {@link https://github.com/muaz-khan/RecordRTC/tree/master/MRecordRTC|MRecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @requires {@link RecordRTC}\r\n */\r\n\r\nfunction MRecordRTC(mediaStream) {\r\n\r\n    /**\r\n     * This method attaches MediaStream object to {@link MRecordRTC}.\r\n     * @param {MediaStream} mediaStream - A MediaStream object, either fetched using getUserMedia API, or generated using captureStreamUntilEnded or WebAudio API.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.addStream(MediaStream);\r\n     */\r\n    this.addStream = function(_mediaStream) {\r\n        if (_mediaStream) {\r\n            mediaStream = _mediaStream;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This property can be used to set the recording type e.g. audio, or video, or gif, or canvas.\r\n     * @property {object} mediaType - {audio: true, video: true, gif: true}\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * var recorder = new MRecordRTC();\r\n     * recorder.mediaType = {\r\n     *     audio: true, // TRUE or StereoAudioRecorder or MediaStreamRecorder\r\n     *     video: true, // TRUE or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder\r\n     *     gif  : true  // TRUE or GifRecorder\r\n     * };\r\n     */\r\n    this.mediaType = {\r\n        audio: true,\r\n        video: true\r\n    };\r\n\r\n    /**\r\n     * This method starts recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.startRecording();\r\n     */\r\n    this.startRecording = function() {\r\n        var mediaType = this.mediaType;\r\n        var recorderType;\r\n        var mimeType = this.mimeType || {\r\n            audio: null,\r\n            video: null,\r\n            gif: null\r\n        };\r\n\r\n        if (typeof mediaType.audio !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'audio').length) {\r\n            mediaType.audio = false;\r\n        }\r\n\r\n        if (typeof mediaType.video !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'video').length) {\r\n            mediaType.video = false;\r\n        }\r\n\r\n        if (typeof mediaType.gif !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'video').length) {\r\n            mediaType.gif = false;\r\n        }\r\n\r\n        if (!mediaType.audio && !mediaType.video && !mediaType.gif) {\r\n            throw 'MediaStream must have either audio or video tracks.';\r\n        }\r\n\r\n        if (!!mediaType.audio) {\r\n            recorderType = null;\r\n            if (typeof mediaType.audio === 'function') {\r\n                recorderType = mediaType.audio;\r\n            }\r\n\r\n            this.audioRecorder = new RecordRTC(mediaStream, {\r\n                type: 'audio',\r\n                bufferSize: this.bufferSize,\r\n                sampleRate: this.sampleRate,\r\n                numberOfAudioChannels: this.numberOfAudioChannels || 2,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.audio,\r\n                timeSlice: this.timeSlice,\r\n                onTimeStamp: this.onTimeStamp\r\n            });\r\n\r\n            if (!mediaType.video) {\r\n                this.audioRecorder.startRecording();\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.video) {\r\n            recorderType = null;\r\n            if (typeof mediaType.video === 'function') {\r\n                recorderType = mediaType.video;\r\n            }\r\n\r\n            var newStream = mediaStream;\r\n\r\n            if (isMediaRecorderCompatible() && !!mediaType.audio && typeof mediaType.audio === 'function') {\r\n                var videoTrack = getTracks(mediaStream, 'video')[0];\r\n\r\n                if (isFirefox) {\r\n                    newStream = new MediaStream();\r\n                    newStream.addTrack(videoTrack);\r\n\r\n                    if (recorderType && recorderType === WhammyRecorder) {\r\n                        // Firefox does NOT supports webp-encoding yet\r\n                        // But Firefox do supports WebAssemblyRecorder\r\n                        recorderType = MediaStreamRecorder;\r\n                    }\r\n                } else {\r\n                    newStream = new MediaStream();\r\n                    newStream.addTrack(videoTrack);\r\n                }\r\n            }\r\n\r\n            this.videoRecorder = new RecordRTC(newStream, {\r\n                type: 'video',\r\n                video: this.video,\r\n                canvas: this.canvas,\r\n                frameInterval: this.frameInterval || 10,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.video,\r\n                timeSlice: this.timeSlice,\r\n                onTimeStamp: this.onTimeStamp,\r\n                workerPath: this.workerPath,\r\n                webAssemblyPath: this.webAssemblyPath,\r\n                frameRate: this.frameRate, // used by WebAssemblyRecorder; values: usually 30; accepts any.\r\n                bitrate: this.bitrate // used by WebAssemblyRecorder; values: 0 to 1000+\r\n            });\r\n\r\n            if (!mediaType.audio) {\r\n                this.videoRecorder.startRecording();\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.audio && !!mediaType.video) {\r\n            var self = this;\r\n\r\n            var isSingleRecorder = isMediaRecorderCompatible() === true;\r\n\r\n            if (mediaType.audio instanceof StereoAudioRecorder && !!mediaType.video) {\r\n                isSingleRecorder = false;\r\n            } else if (mediaType.audio !== true && mediaType.video !== true && mediaType.audio !== mediaType.video) {\r\n                isSingleRecorder = false;\r\n            }\r\n\r\n            if (isSingleRecorder === true) {\r\n                self.audioRecorder = null;\r\n                self.videoRecorder.startRecording();\r\n            } else {\r\n                self.videoRecorder.initRecorder(function() {\r\n                    self.audioRecorder.initRecorder(function() {\r\n                        // Both recorders are ready to record things accurately\r\n                        self.videoRecorder.startRecording();\r\n                        self.audioRecorder.startRecording();\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.gif) {\r\n            recorderType = null;\r\n            if (typeof mediaType.gif === 'function') {\r\n                recorderType = mediaType.gif;\r\n            }\r\n            this.gifRecorder = new RecordRTC(mediaStream, {\r\n                type: 'gif',\r\n                frameRate: this.frameRate || 200,\r\n                quality: this.quality || 10,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.gif\r\n            });\r\n            this.gifRecorder.startRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method stops recording.\r\n     * @param {function} callback - Callback function is invoked when all encoders finished their jobs.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.stopRecording(function(recording){\r\n     *     var audioBlob = recording.audio;\r\n     *     var videoBlob = recording.video;\r\n     *     var gifBlob   = recording.gif;\r\n     * });\r\n     */\r\n    this.stopRecording = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'audio');\r\n            });\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'video');\r\n            });\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'gif');\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method pauses recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.pauseRecording();\r\n     */\r\n    this.pauseRecording = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.pauseRecording();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.pauseRecording();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.pauseRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.resumeRecording();\r\n     */\r\n    this.resumeRecording = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.resumeRecording();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.resumeRecording();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.resumeRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to manually get all recorded blobs.\r\n     * @param {function} callback - All recorded blobs are passed back to the \"callback\" function.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.getBlob(function(recording){\r\n     *     var audioBlob = recording.audio;\r\n     *     var videoBlob = recording.video;\r\n     *     var gifBlob   = recording.gif;\r\n     * });\r\n     * // or\r\n     * var audioBlob = recorder.getBlob().audio;\r\n     * var videoBlob = recorder.getBlob().video;\r\n     */\r\n    this.getBlob = function(callback) {\r\n        var output = {};\r\n\r\n        if (this.audioRecorder) {\r\n            output.audio = this.audioRecorder.getBlob();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            output.video = this.videoRecorder.getBlob();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            output.gif = this.gifRecorder.getBlob();\r\n        }\r\n\r\n        if (callback) {\r\n            callback(output);\r\n        }\r\n\r\n        return output;\r\n    };\r\n\r\n    /**\r\n     * Destroy all recorder instances.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.destroy();\r\n     */\r\n    this.destroy = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.destroy();\r\n            this.audioRecorder = null;\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.destroy();\r\n            this.videoRecorder = null;\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.destroy();\r\n            this.gifRecorder = null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to manually get all recorded blobs' DataURLs.\r\n     * @param {function} callback - All recorded blobs' DataURLs are passed back to the \"callback\" function.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.getDataURL(function(recording){\r\n     *     var audioDataURL = recording.audio;\r\n     *     var videoDataURL = recording.video;\r\n     *     var gifDataURL   = recording.gif;\r\n     * });\r\n     */\r\n    this.getDataURL = function(callback) {\r\n        this.getBlob(function(blob) {\r\n            if (blob.audio && blob.video) {\r\n                getDataURL(blob.audio, function(_audioDataURL) {\r\n                    getDataURL(blob.video, function(_videoDataURL) {\r\n                        callback({\r\n                            audio: _audioDataURL,\r\n                            video: _videoDataURL\r\n                        });\r\n                    });\r\n                });\r\n            } else if (blob.audio) {\r\n                getDataURL(blob.audio, function(_audioDataURL) {\r\n                    callback({\r\n                        audio: _audioDataURL\r\n                    });\r\n                });\r\n            } else if (blob.video) {\r\n                getDataURL(blob.video, function(_videoDataURL) {\r\n                    callback({\r\n                        video: _videoDataURL\r\n                    });\r\n                });\r\n            }\r\n        });\r\n\r\n        function getDataURL(blob, callback00) {\r\n            if (typeof Worker !== 'undefined') {\r\n                var webWorker = processInWebWorker(function readFile(_blob) {\r\n                    postMessage(new FileReaderSync().readAsDataURL(_blob));\r\n                });\r\n\r\n                webWorker.onmessage = function(event) {\r\n                    callback00(event.data);\r\n                };\r\n\r\n                webWorker.postMessage(blob);\r\n            } else {\r\n                var reader = new FileReader();\r\n                reader.readAsDataURL(blob);\r\n                reader.onload = function(event) {\r\n                    callback00(event.target.result);\r\n                };\r\n            }\r\n        }\r\n\r\n        function processInWebWorker(_function) {\r\n            var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n                'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n            ], {\r\n                type: 'application/javascript'\r\n            }));\r\n\r\n            var worker = new Worker(blob);\r\n            var url;\r\n            if (typeof URL !== 'undefined') {\r\n                url = URL;\r\n            } else if (typeof webkitURL !== 'undefined') {\r\n                url = webkitURL;\r\n            } else {\r\n                throw 'Neither URL nor webkitURL detected.';\r\n            }\r\n            url.revokeObjectURL(blob);\r\n            return worker;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to ask {@link MRecordRTC} to write all recorded blobs into IndexedDB storage.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.writeToDisk();\r\n     */\r\n    this.writeToDisk = function() {\r\n        RecordRTC.writeToDisk({\r\n            audio: this.audioRecorder,\r\n            video: this.videoRecorder,\r\n            gif: this.gifRecorder\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method can be used to invoke a save-as dialog for all recorded blobs.\r\n     * @param {object} args - {audio: 'audio-name', video: 'video-name', gif: 'gif-name'}\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.save({\r\n     *     audio: 'audio-file-name',\r\n     *     video: 'video-file-name',\r\n     *     gif  : 'gif-file-name'\r\n     * });\r\n     */\r\n    this.save = function(args) {\r\n        args = args || {\r\n            audio: true,\r\n            video: true,\r\n            gif: true\r\n        };\r\n\r\n        if (!!args.audio && this.audioRecorder) {\r\n            this.audioRecorder.save(typeof args.audio === 'string' ? args.audio : '');\r\n        }\r\n\r\n        if (!!args.video && this.videoRecorder) {\r\n            this.videoRecorder.save(typeof args.video === 'string' ? args.video : '');\r\n        }\r\n        if (!!args.gif && this.gifRecorder) {\r\n            this.gifRecorder.save(typeof args.gif === 'string' ? args.gif : '');\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * This method can be used to get all recorded blobs from IndexedDB storage.\r\n * @param {string} type - 'all' or 'audio' or 'video' or 'gif'\r\n * @param {function} callback - Callback function to get all stored blobs.\r\n * @method\r\n * @memberof MRecordRTC\r\n * @example\r\n * MRecordRTC.getFromDisk('all', function(dataURL, type){\r\n *     if(type === 'audio') { }\r\n *     if(type === 'video') { }\r\n *     if(type === 'gif')   { }\r\n * });\r\n */\r\nMRecordRTC.getFromDisk = RecordRTC.getFromDisk;\r\n\r\n/**\r\n * This method can be used to store recorded blobs into IndexedDB storage.\r\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\r\n * @method\r\n * @memberof MRecordRTC\r\n * @example\r\n * MRecordRTC.writeToDisk({\r\n *     audio: audioBlob,\r\n *     video: videoBlob,\r\n *     gif  : gifBlob\r\n * });\r\n */\r\nMRecordRTC.writeToDisk = RecordRTC.writeToDisk;\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MRecordRTC = MRecordRTC;\r\n}\n\r\nvar browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\r\n\r\n(function(that) {\r\n    if (!that) {\r\n        return;\r\n    }\r\n\r\n    if (typeof window !== 'undefined') {\r\n        return;\r\n    }\r\n\r\n    if (typeof global === 'undefined') {\r\n        return;\r\n    }\r\n\r\n    global.navigator = {\r\n        userAgent: browserFakeUserAgent,\r\n        getUserMedia: function() {}\r\n    };\r\n\r\n    if (!global.console) {\r\n        global.console = {};\r\n    }\r\n\r\n    if (typeof global.console.log === 'undefined' || typeof global.console.error === 'undefined') {\r\n        global.console.error = global.console.log = global.console.log || function() {\r\n            console.log(arguments);\r\n        };\r\n    }\r\n\r\n    if (typeof document === 'undefined') {\r\n        /*global document:true */\r\n        that.document = {\r\n            documentElement: {\r\n                appendChild: function() {\r\n                    return '';\r\n                }\r\n            }\r\n        };\r\n\r\n        document.createElement = document.captureStream = document.mozCaptureStream = function() {\r\n            var obj = {\r\n                getContext: function() {\r\n                    return obj;\r\n                },\r\n                play: function() {},\r\n                pause: function() {},\r\n                drawImage: function() {},\r\n                toDataURL: function() {\r\n                    return '';\r\n                },\r\n                style: {}\r\n            };\r\n            return obj;\r\n        };\r\n\r\n        that.HTMLVideoElement = function() {};\r\n    }\r\n\r\n    if (typeof location === 'undefined') {\r\n        /*global location:true */\r\n        that.location = {\r\n            protocol: 'file:',\r\n            href: '',\r\n            hash: ''\r\n        };\r\n    }\r\n\r\n    if (typeof screen === 'undefined') {\r\n        /*global screen:true */\r\n        that.screen = {\r\n            width: 0,\r\n            height: 0\r\n        };\r\n    }\r\n\r\n    if (typeof URL === 'undefined') {\r\n        /*global screen:true */\r\n        that.URL = {\r\n            createObjectURL: function() {\r\n                return '';\r\n            },\r\n            revokeObjectURL: function() {\r\n                return '';\r\n            }\r\n        };\r\n    }\r\n\r\n    /*global window:true */\r\n    that.window = global;\r\n})(typeof global !== 'undefined' ? global : null);\n\r\n// _____________________________\r\n// Cross-Browser-Declarations.js\r\n\r\n// animation-frame used in WebM recording\r\n\r\n/*jshint -W079 */\r\nvar requestAnimationFrame = window.requestAnimationFrame;\r\nif (typeof requestAnimationFrame === 'undefined') {\r\n    if (typeof webkitRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = webkitRequestAnimationFrame;\r\n    } else if (typeof mozRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = mozRequestAnimationFrame;\r\n    } else if (typeof msRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = msRequestAnimationFrame;\r\n    } else if (typeof requestAnimationFrame === 'undefined') {\r\n        // via: https://gist.github.com/paulirish/1579671\r\n        var lastTime = 0;\r\n\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = function(callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function() {\r\n                callback(currTime + timeToCall);\r\n            }, timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    }\r\n}\r\n\r\n/*jshint -W079 */\r\nvar cancelAnimationFrame = window.cancelAnimationFrame;\r\nif (typeof cancelAnimationFrame === 'undefined') {\r\n    if (typeof webkitCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = webkitCancelAnimationFrame;\r\n    } else if (typeof mozCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = mozCancelAnimationFrame;\r\n    } else if (typeof msCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = msCancelAnimationFrame;\r\n    } else if (typeof cancelAnimationFrame === 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = function(id) {\r\n            clearTimeout(id);\r\n        };\r\n    }\r\n}\r\n\r\n// WebAudio API representer\r\nvar AudioContext = window.AudioContext;\r\n\r\nif (typeof AudioContext === 'undefined') {\r\n    if (typeof webkitAudioContext !== 'undefined') {\r\n        /*global AudioContext:true */\r\n        AudioContext = webkitAudioContext;\r\n    }\r\n\r\n    if (typeof mozAudioContext !== 'undefined') {\r\n        /*global AudioContext:true */\r\n        AudioContext = mozAudioContext;\r\n    }\r\n}\r\n\r\n/*jshint -W079 */\r\nvar URL = window.URL;\r\n\r\nif (typeof URL === 'undefined' && typeof webkitURL !== 'undefined') {\r\n    /*global URL:true */\r\n    URL = webkitURL;\r\n}\r\n\r\nif (typeof navigator !== 'undefined' && typeof navigator.getUserMedia === 'undefined') { // maybe window.navigator?\r\n    if (typeof navigator.webkitGetUserMedia !== 'undefined') {\r\n        navigator.getUserMedia = navigator.webkitGetUserMedia;\r\n    }\r\n\r\n    if (typeof navigator.mozGetUserMedia !== 'undefined') {\r\n        navigator.getUserMedia = navigator.mozGetUserMedia;\r\n    }\r\n}\r\n\r\nvar isEdge = navigator.userAgent.indexOf('Edge') !== -1 && (!!navigator.msSaveBlob || !!navigator.msSaveOrOpenBlob);\r\nvar isOpera = !!window.opera || navigator.userAgent.indexOf('OPR/') !== -1;\r\nvar isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1 && ('netscape' in window) && / rv:/.test(navigator.userAgent);\r\nvar isChrome = (!isOpera && !isEdge && !!navigator.webkitGetUserMedia) || isElectron() || navigator.userAgent.toLowerCase().indexOf('chrome/') !== -1;\r\n\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n\r\nif (isSafari && !isChrome && navigator.userAgent.indexOf('CriOS') !== -1) {\r\n    isSafari = false;\r\n    isChrome = true;\r\n}\r\n\r\nvar MediaStream = window.MediaStream;\r\n\r\nif (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n    MediaStream = webkitMediaStream;\r\n}\r\n\r\n/*global MediaStream:true */\r\nif (typeof MediaStream !== 'undefined') {\r\n    // override \"stop\" method for all browsers\r\n    if (typeof MediaStream.prototype.stop === 'undefined') {\r\n        MediaStream.prototype.stop = function() {\r\n            this.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n        };\r\n    }\r\n}\r\n\r\n// below function via: http://goo.gl/B3ae8c\r\n/**\r\n * Return human-readable file size.\r\n * @param {number} bytes - Pass bytes and get formatted string.\r\n * @returns {string} - formatted string\r\n * @example\r\n * bytesToSize(1024*1024*5) === '5 GB'\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction bytesToSize(bytes) {\r\n    var k = 1000;\r\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    if (bytes === 0) {\r\n        return '0 Bytes';\r\n    }\r\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(k)), 10);\r\n    return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];\r\n}\r\n\r\n/**\r\n * @param {Blob} file - File or Blob object. This parameter is required.\r\n * @param {string} fileName - Optional file name e.g. \"Recorded-Video.webm\"\r\n * @example\r\n * invokeSaveAsDialog(blob or file, [optional] fileName);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction invokeSaveAsDialog(file, fileName) {\r\n    if (!file) {\r\n        throw 'Blob object is required.';\r\n    }\r\n\r\n    if (!file.type) {\r\n        try {\r\n            file.type = 'video/webm';\r\n        } catch (e) {}\r\n    }\r\n\r\n    var fileExtension = (file.type || 'video/webm').split('/')[1];\r\n    if (fileExtension.indexOf(';') !== -1) {\r\n        // extended mimetype, e.g. 'video/webm;codecs=vp8,opus'\r\n        fileExtension = fileExtension.split(';')[0];\r\n    }\r\n    if (fileName && fileName.indexOf('.') !== -1) {\r\n        var splitted = fileName.split('.');\r\n        fileName = splitted[0];\r\n        fileExtension = splitted[1];\r\n    }\r\n\r\n    var fileFullName = (fileName || (Math.round(Math.random() * 9999999999) + 888888888)) + '.' + fileExtension;\r\n\r\n    if (typeof navigator.msSaveOrOpenBlob !== 'undefined') {\r\n        return navigator.msSaveOrOpenBlob(file, fileFullName);\r\n    } else if (typeof navigator.msSaveBlob !== 'undefined') {\r\n        return navigator.msSaveBlob(file, fileFullName);\r\n    }\r\n\r\n    var hyperlink = document.createElement('a');\r\n    hyperlink.href = URL.createObjectURL(file);\r\n    hyperlink.download = fileFullName;\r\n\r\n    hyperlink.style = 'display:none;opacity:0;color:transparent;';\r\n    (document.body || document.documentElement).appendChild(hyperlink);\r\n\r\n    if (typeof hyperlink.click === 'function') {\r\n        hyperlink.click();\r\n    } else {\r\n        hyperlink.target = '_blank';\r\n        hyperlink.dispatchEvent(new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true\r\n        }));\r\n    }\r\n\r\n    URL.revokeObjectURL(hyperlink.href);\r\n}\r\n\r\n/**\r\n * from: https://github.com/cheton/is-electron/blob/master/index.js\r\n **/\r\nfunction isElectron() {\r\n    // Renderer process\r\n    if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\r\n        return true;\r\n    }\r\n\r\n    // Main process\r\n    if (typeof process !== 'undefined' && typeof process.versions === 'object' && !!process.versions.electron) {\r\n        return true;\r\n    }\r\n\r\n    // Detect the user agent when the `nodeIntegration` option is set to true\r\n    if (typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction getTracks(stream, kind) {\r\n    if (!stream || !stream.getTracks) {\r\n        return [];\r\n    }\r\n\r\n    return stream.getTracks().filter(function(t) {\r\n        return t.kind === (kind || 'audio');\r\n    });\r\n}\r\n\r\nfunction setSrcObject(stream, element) {\r\n    if ('srcObject' in element) {\r\n        element.srcObject = stream;\r\n    } else if ('mozSrcObject' in element) {\r\n        element.mozSrcObject = stream;\r\n    } else {\r\n        element.srcObject = stream;\r\n    }\r\n}\r\n\r\n/**\r\n * @param {Blob} file - File or Blob object.\r\n * @param {function} callback - Callback function.\r\n * @example\r\n * getSeekableBlob(blob or file, callback);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction getSeekableBlob(inputBlob, callback) {\r\n    // EBML.js copyrights goes to: https://github.com/legokichi/ts-ebml\r\n    if (typeof EBML === 'undefined') {\r\n        throw new Error('Please link: https://www.webrtc-experiment.com/EBML.js');\r\n    }\r\n\r\n    var reader = new EBML.Reader();\r\n    var decoder = new EBML.Decoder();\r\n    var tools = EBML.tools;\r\n\r\n    var fileReader = new FileReader();\r\n    fileReader.onload = function(e) {\r\n        var ebmlElms = decoder.decode(this.result);\r\n        ebmlElms.forEach(function(element) {\r\n            reader.read(element);\r\n        });\r\n        reader.stop();\r\n        var refinedMetadataBuf = tools.makeMetadataSeekable(reader.metadatas, reader.duration, reader.cues);\r\n        var body = this.result.slice(reader.metadataSize);\r\n        var newBlob = new Blob([refinedMetadataBuf, body], {\r\n            type: 'video/webm'\r\n        });\r\n\r\n        callback(newBlob);\r\n    };\r\n    fileReader.readAsArrayBuffer(inputBlob);\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.invokeSaveAsDialog = invokeSaveAsDialog;\r\n    RecordRTC.getTracks = getTracks;\r\n    RecordRTC.getSeekableBlob = getSeekableBlob;\r\n    RecordRTC.bytesToSize = bytesToSize;\r\n    RecordRTC.isElectron = isElectron;\r\n}\r\n\r\n// __________ (used to handle stuff like http://goo.gl/xmE5eg) issue #129\r\n// Storage.js\r\n\r\n/**\r\n * Storage is a standalone object used by {@link RecordRTC} to store reusable objects e.g. \"new AudioContext\".\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @example\r\n * Storage.AudioContext === webkitAudioContext\r\n * @property {webkitAudioContext} AudioContext - Keeps a reference to AudioContext object.\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\nvar Storage = {};\r\n\r\nif (typeof AudioContext !== 'undefined') {\r\n    Storage.AudioContext = AudioContext;\r\n} else if (typeof webkitAudioContext !== 'undefined') {\r\n    Storage.AudioContext = webkitAudioContext;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.Storage = Storage;\r\n}\n\r\nfunction isMediaRecorderCompatible() {\r\n    if (isFirefox || isSafari || isEdge) {\r\n        return true;\r\n    }\r\n\r\n    var nVer = navigator.appVersion;\r\n    var nAgt = navigator.userAgent;\r\n    var fullVersion = '' + parseFloat(navigator.appVersion);\r\n    var majorVersion = parseInt(navigator.appVersion, 10);\r\n    var nameOffset, verOffset, ix;\r\n\r\n    if (isChrome || isOpera) {\r\n        verOffset = nAgt.indexOf('Chrome');\r\n        fullVersion = nAgt.substring(verOffset + 7);\r\n    }\r\n\r\n    // trim the fullVersion string at semicolon/space if present\r\n    if ((ix = fullVersion.indexOf(';')) !== -1) {\r\n        fullVersion = fullVersion.substring(0, ix);\r\n    }\r\n\r\n    if ((ix = fullVersion.indexOf(' ')) !== -1) {\r\n        fullVersion = fullVersion.substring(0, ix);\r\n    }\r\n\r\n    majorVersion = parseInt('' + fullVersion, 10);\r\n\r\n    if (isNaN(majorVersion)) {\r\n        fullVersion = '' + parseFloat(navigator.appVersion);\r\n        majorVersion = parseInt(navigator.appVersion, 10);\r\n    }\r\n\r\n    return majorVersion >= 49;\r\n}\n\r\n// ______________________\r\n// MediaStreamRecorder.js\r\n\r\n/**\r\n * MediaStreamRecorder is an abstraction layer for {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}. It is used by {@link RecordRTC} to record MediaStream(s) in both Chrome and Firefox.\r\n * @summary Runs top over {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://github.com/muaz-khan|Muaz Khan}\r\n * @typedef MediaStreamRecorder\r\n * @class\r\n * @example\r\n * var config = {\r\n *     mimeType: 'video/webm', // vp8, vp9, h264, mkv, opus/vorbis\r\n *     audioBitsPerSecond : 256 * 8 * 1024,\r\n *     videoBitsPerSecond : 256 * 8 * 1024,\r\n *     bitsPerSecond: 256 * 8 * 1024,  // if this is provided, skip above two\r\n *     checkForInactiveTracks: true,\r\n *     timeSlice: 1000, // concatenate intervals based blobs\r\n *     ondataavailable: function() {} // get intervals based blobs\r\n * }\r\n * var recorder = new MediaStreamRecorder(mediaStream, config);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n *\r\n *     // or\r\n *     var blob = recorder.blob;\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {disableLogs:true, initCallback: function, mimeType: \"video/webm\", timeSlice: 1000}\r\n * @throws Will throw an error if first argument \"MediaStream\" is missing. Also throws error if \"MediaRecorder API\" are not supported by the browser.\r\n */\r\n\r\nfunction MediaStreamRecorder(mediaStream, config) {\r\n    var self = this;\r\n\r\n    if (typeof mediaStream === 'undefined') {\r\n        throw 'First argument \"MediaStream\" is required.';\r\n    }\r\n\r\n    if (typeof MediaRecorder === 'undefined') {\r\n        throw 'Your browser does not support the Media Recorder API. Please try other modules e.g. WhammyRecorder or StereoAudioRecorder.';\r\n    }\r\n\r\n    config = config || {\r\n        // bitsPerSecond: 256 * 8 * 1024,\r\n        mimeType: 'video/webm'\r\n    };\r\n\r\n    if (config.type === 'audio') {\r\n        if (getTracks(mediaStream, 'video').length && getTracks(mediaStream, 'audio').length) {\r\n            var stream;\r\n            if (!!navigator.mozGetUserMedia) {\r\n                stream = new MediaStream();\r\n                stream.addTrack(getTracks(mediaStream, 'audio')[0]);\r\n            } else {\r\n                // webkitMediaStream\r\n                stream = new MediaStream(getTracks(mediaStream, 'audio'));\r\n            }\r\n            mediaStream = stream;\r\n        }\r\n\r\n        if (!config.mimeType || config.mimeType.toString().toLowerCase().indexOf('audio') === -1) {\r\n            config.mimeType = isChrome ? 'audio/webm' : 'audio/ogg';\r\n        }\r\n\r\n        if (config.mimeType && config.mimeType.toString().toLowerCase() !== 'audio/ogg' && !!navigator.mozGetUserMedia) {\r\n            // forcing better codecs on Firefox (via #166)\r\n            config.mimeType = 'audio/ogg';\r\n        }\r\n    }\r\n\r\n    var arrayOfBlobs = [];\r\n\r\n    /**\r\n     * This method returns array of blobs. Use only with \"timeSlice\". Its useful to preview recording anytime, without using the \"stop\" method.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * var arrayOfBlobs = recorder.getArrayOfBlobs();\r\n     * @returns {Array} Returns array of recorded blobs.\r\n     */\r\n    this.getArrayOfBlobs = function() {\r\n        return arrayOfBlobs;\r\n    };\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        // set defaults\r\n        self.blob = null;\r\n        self.clearRecordedData();\r\n        self.timestamps = [];\r\n        allStates = [];\r\n        arrayOfBlobs = [];\r\n\r\n        var recorderHints = config;\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Passing following config over MediaRecorder API.', recorderHints);\r\n        }\r\n\r\n        if (mediaRecorder) {\r\n            // mandatory to make sure Firefox doesn't fails to record streams 3-4 times without reloading the page.\r\n            mediaRecorder = null;\r\n        }\r\n\r\n        if (isChrome && !isMediaRecorderCompatible()) {\r\n            // to support video-only recording on stable\r\n            recorderHints = 'video/vp8';\r\n        }\r\n\r\n        if (typeof MediaRecorder.isTypeSupported === 'function' && recorderHints.mimeType) {\r\n            if (!MediaRecorder.isTypeSupported(recorderHints.mimeType)) {\r\n                if (!config.disableLogs) {\r\n                    console.warn('MediaRecorder API seems unable to record mimeType:', recorderHints.mimeType);\r\n                }\r\n\r\n                recorderHints.mimeType = config.type === 'audio' ? 'audio/webm' : 'video/webm';\r\n            }\r\n        }\r\n\r\n        // using MediaRecorder API here\r\n        try {\r\n            mediaRecorder = new MediaRecorder(mediaStream, recorderHints);\r\n\r\n            // reset\r\n            config.mimeType = recorderHints.mimeType;\r\n        } catch (e) {\r\n            // chrome-based fallback\r\n            mediaRecorder = new MediaRecorder(mediaStream);\r\n        }\r\n\r\n        // old hack?\r\n        if (recorderHints.mimeType && !MediaRecorder.isTypeSupported && 'canRecordMimeType' in mediaRecorder && mediaRecorder.canRecordMimeType(recorderHints.mimeType) === false) {\r\n            if (!config.disableLogs) {\r\n                console.warn('MediaRecorder API seems unable to record mimeType:', recorderHints.mimeType);\r\n            }\r\n        }\r\n\r\n        // Dispatching OnDataAvailable Handler\r\n        mediaRecorder.ondataavailable = function(e) {\r\n            if (e.data) {\r\n                allStates.push('ondataavailable: ' + bytesToSize(e.data.size));\r\n            }\r\n\r\n            if (typeof config.timeSlice === 'number') {\r\n                if (e.data && e.data.size) {\r\n                    arrayOfBlobs.push(e.data);\r\n                    updateTimeStamp();\r\n\r\n                    if (typeof config.ondataavailable === 'function') {\r\n                        // intervals based blobs\r\n                        var blob = config.getNativeBlob ? e.data : new Blob([e.data], {\r\n                            type: getMimeType(recorderHints)\r\n                        });\r\n                        config.ondataavailable(blob);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (!e.data || !e.data.size || e.data.size < 100 || self.blob) {\r\n                // make sure that stopRecording always getting fired\r\n                // even if there is invalid data\r\n                if (self.recordingCallback) {\r\n                    self.recordingCallback(new Blob([], {\r\n                        type: getMimeType(recorderHints)\r\n                    }));\r\n                    self.recordingCallback = null;\r\n                }\r\n                return;\r\n            }\r\n\r\n            self.blob = config.getNativeBlob ? e.data : new Blob([e.data], {\r\n                type: getMimeType(recorderHints)\r\n            });\r\n\r\n            if (self.recordingCallback) {\r\n                self.recordingCallback(self.blob);\r\n                self.recordingCallback = null;\r\n            }\r\n        };\r\n\r\n        mediaRecorder.onstart = function() {\r\n            allStates.push('started');\r\n        };\r\n\r\n        mediaRecorder.onpause = function() {\r\n            allStates.push('paused');\r\n        };\r\n\r\n        mediaRecorder.onresume = function() {\r\n            allStates.push('resumed');\r\n        };\r\n\r\n        mediaRecorder.onstop = function() {\r\n            allStates.push('stopped');\r\n        };\r\n\r\n        mediaRecorder.onerror = function(error) {\r\n            if (!error) {\r\n                return;\r\n            }\r\n\r\n            if (!error.name) {\r\n                error.name = 'UnknownError';\r\n            }\r\n\r\n            allStates.push('error: ' + error);\r\n\r\n            if (!config.disableLogs) {\r\n                // via: https://w3c.github.io/mediacapture-record/MediaRecorder.html#exception-summary\r\n                if (error.name.toString().toLowerCase().indexOf('invalidstate') !== -1) {\r\n                    console.error('The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.', error);\r\n                } else if (error.name.toString().toLowerCase().indexOf('notsupported') !== -1) {\r\n                    console.error('MIME type (', recorderHints.mimeType, ') is not supported.', error);\r\n                } else if (error.name.toString().toLowerCase().indexOf('security') !== -1) {\r\n                    console.error('MediaRecorder security error', error);\r\n                }\r\n\r\n                // older code below\r\n                else if (error.name === 'OutOfMemory') {\r\n                    console.error('The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\r\n                } else if (error.name === 'IllegalStreamModification') {\r\n                    console.error('A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\r\n                } else if (error.name === 'OtherRecordingError') {\r\n                    console.error('Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\r\n                } else if (error.name === 'GenericError') {\r\n                    console.error('The UA cannot provide the codec or recording option that has been requested.', error);\r\n                } else {\r\n                    console.error('MediaRecorder Error', error);\r\n                }\r\n            }\r\n\r\n            (function(looper) {\r\n                if (!self.manuallyStopped && mediaRecorder && mediaRecorder.state === 'inactive') {\r\n                    delete config.timeslice;\r\n\r\n                    // 10 minutes, enough?\r\n                    mediaRecorder.start(10 * 60 * 1000);\r\n                    return;\r\n                }\r\n\r\n                setTimeout(looper, 1000);\r\n            })();\r\n\r\n            if (mediaRecorder.state !== 'inactive' && mediaRecorder.state !== 'stopped') {\r\n                mediaRecorder.stop();\r\n            }\r\n        };\r\n\r\n        if (typeof config.timeSlice === 'number') {\r\n            updateTimeStamp();\r\n            mediaRecorder.start(config.timeSlice);\r\n        } else {\r\n            // default is 60 minutes; enough?\r\n            // use config => {timeSlice: 1000} otherwise\r\n\r\n            mediaRecorder.start(3.6e+6);\r\n        }\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback(); // old code\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @property {Array} timestamps - Array of time stamps\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * console.log(recorder.timestamps);\r\n     */\r\n    this.timestamps = [];\r\n\r\n    function updateTimeStamp() {\r\n        self.timestamps.push(new Date().getTime());\r\n\r\n        if (typeof config.onTimeStamp === 'function') {\r\n            config.onTimeStamp(self.timestamps[self.timestamps.length - 1], self.timestamps);\r\n        }\r\n    }\r\n\r\n    function getMimeType(secondObject) {\r\n        if (mediaRecorder && mediaRecorder.mimeType) {\r\n            return mediaRecorder.mimeType;\r\n        }\r\n\r\n        return secondObject.mimeType || 'video/webm';\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        self.manuallyStopped = true; // used inside the mediaRecorder.onerror\r\n\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        this.recordingCallback = callback;\r\n\r\n        if (mediaRecorder.state === 'recording') {\r\n            mediaRecorder.stop();\r\n        }\r\n\r\n        if (typeof config.timeSlice === 'number') {\r\n            setTimeout(function() {\r\n                self.blob = new Blob(arrayOfBlobs, {\r\n                    type: getMimeType(config)\r\n                });\r\n\r\n                self.recordingCallback(self.blob);\r\n            }, 100);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        if (mediaRecorder.state === 'recording') {\r\n            mediaRecorder.pause();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        if (mediaRecorder.state === 'paused') {\r\n            mediaRecorder.resume();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (mediaRecorder && mediaRecorder.state === 'recording') {\r\n            self.stop(clearRecordedDataCB);\r\n        }\r\n\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        arrayOfBlobs = [];\r\n        mediaRecorder = null;\r\n        self.timestamps = [];\r\n    }\r\n\r\n    // Reference to \"MediaRecorder\" object\r\n    var mediaRecorder;\r\n\r\n    /**\r\n     * Access to native MediaRecorder API\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @instance\r\n     * @example\r\n     * var internal = recorder.getInternalRecorder();\r\n     * internal.ondataavailable = function() {}; // override\r\n     * internal.stream, internal.onpause, internal.onstop, etc.\r\n     * @returns {Object} Returns internal recording object.\r\n     */\r\n    this.getInternalRecorder = function() {\r\n        return mediaRecorder;\r\n    };\r\n\r\n    function isMediaStreamActive() {\r\n        if ('active' in mediaStream) {\r\n            if (!mediaStream.active) {\r\n                return false;\r\n            }\r\n        } else if ('ended' in mediaStream) { // old hack\r\n            if (mediaStream.ended) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @property {Blob} blob - Recorded data as \"Blob\" object.\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.stop(function() {\r\n     *     var blob = recorder.blob;\r\n     * });\r\n     */\r\n    this.blob = null;\r\n\r\n\r\n    /**\r\n     * Get MediaRecorder readonly state.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * var state = recorder.getState();\r\n     * @returns {String} Returns recording state.\r\n     */\r\n    this.getState = function() {\r\n        if (!mediaRecorder) {\r\n            return 'inactive';\r\n        }\r\n\r\n        return mediaRecorder.state || 'inactive';\r\n    };\r\n\r\n    // list of all recording states\r\n    var allStates = [];\r\n\r\n    /**\r\n     * Get MediaRecorder all recording states.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * var state = recorder.getAllStates();\r\n     * @returns {Array} Returns all recording states\r\n     */\r\n    this.getAllStates = function() {\r\n        return allStates;\r\n    };\r\n\r\n    // if any Track within the MediaStream is muted or not enabled at any time, \r\n    // the browser will only record black frames \r\n    // or silence since that is the content produced by the Track\r\n    // so we need to stopRecording as soon as any single track ends.\r\n    if (typeof config.checkForInactiveTracks === 'undefined') {\r\n        config.checkForInactiveTracks = false; // disable to minimize CPU usage\r\n    }\r\n\r\n    var self = this;\r\n\r\n    // this method checks if media stream is stopped\r\n    // or if any track is ended.\r\n    (function looper() {\r\n        if (!mediaRecorder || config.checkForInactiveTracks === false) {\r\n            return;\r\n        }\r\n\r\n        if (isMediaStreamActive() === false) {\r\n            if (!config.disableLogs) {\r\n                console.log('MediaStream seems stopped.');\r\n            }\r\n            self.stop();\r\n            return;\r\n        }\r\n\r\n        setTimeout(looper, 1000); // check every second\r\n    })();\r\n\r\n    // for debugging\r\n    this.name = 'MediaStreamRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MediaStreamRecorder = MediaStreamRecorder;\r\n}\r\n\r\n// source code from: http://typedarray.org/wp-content/projects/WebAudioRecorder/script.js\r\n// https://github.com/mattdiamond/Recorderjs#license-mit\r\n// ______________________\r\n// StereoAudioRecorder.js\r\n\r\n/**\r\n * StereoAudioRecorder is a standalone class used by {@link RecordRTC} to bring \"stereo\" audio-recording in chrome.\r\n * @summary JavaScript standalone object for stereo audio recording.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef StereoAudioRecorder\r\n * @class\r\n * @example\r\n * var recorder = new StereoAudioRecorder(MediaStream, {\r\n *     sampleRate: 44100,\r\n *     bufferSize: 4096\r\n * });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {sampleRate: 44100, bufferSize: 4096, numberOfAudioChannels: 1, etc.}\r\n */\r\n\r\nfunction StereoAudioRecorder(mediaStream, config) {\r\n    if (!getTracks(mediaStream, 'audio').length) {\r\n        throw 'Your stream has no audio tracks.';\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    var self = this;\r\n\r\n    // variables\r\n    var leftchannel = [];\r\n    var rightchannel = [];\r\n    var recording = false;\r\n    var recordingLength = 0;\r\n    var jsAudioNode;\r\n\r\n    var numberOfAudioChannels = 2;\r\n\r\n    /**\r\n     * Set sample rates such as 8K or 16K. Reference: http://stackoverflow.com/a/28977136/552182\r\n     * @property {number} desiredSampRate - Desired Bits per sample * 1000\r\n     * @memberof StereoAudioRecorder\r\n     * @instance\r\n     * @example\r\n     * var recorder = StereoAudioRecorder(mediaStream, {\r\n     *   desiredSampRate: 16 * 1000 // bits-per-sample * 1000\r\n     * });\r\n     */\r\n    var desiredSampRate = config.desiredSampRate;\r\n\r\n    // backward compatibility\r\n    if (config.leftChannel === true) {\r\n        numberOfAudioChannels = 1;\r\n    }\r\n\r\n    if (config.numberOfAudioChannels === 1) {\r\n        numberOfAudioChannels = 1;\r\n    }\r\n\r\n    if (!numberOfAudioChannels || numberOfAudioChannels < 1) {\r\n        numberOfAudioChannels = 2;\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        console.log('StereoAudioRecorder is set to record number of channels: ' + numberOfAudioChannels);\r\n    }\r\n\r\n    // if any Track within the MediaStream is muted or not enabled at any time, \r\n    // the browser will only record black frames \r\n    // or silence since that is the content produced by the Track\r\n    // so we need to stopRecording as soon as any single track ends.\r\n    if (typeof config.checkForInactiveTracks === 'undefined') {\r\n        config.checkForInactiveTracks = true;\r\n    }\r\n\r\n    function isMediaStreamActive() {\r\n        if (config.checkForInactiveTracks === false) {\r\n            // always return \"true\"\r\n            return true;\r\n        }\r\n\r\n        if ('active' in mediaStream) {\r\n            if (!mediaStream.active) {\r\n                return false;\r\n            }\r\n        } else if ('ended' in mediaStream) { // old hack\r\n            if (mediaStream.ended) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (isMediaStreamActive() === false) {\r\n            throw 'Please make sure MediaStream is active.';\r\n        }\r\n\r\n        resetVariables();\r\n\r\n        isAudioProcessStarted = isPaused = false;\r\n        recording = true;\r\n\r\n        if (typeof config.timeSlice !== 'undefined') {\r\n            looper();\r\n        }\r\n    };\r\n\r\n    function mergeLeftRightBuffers(config, callback) {\r\n        function mergeAudioBuffers(config, cb) {\r\n            var numberOfAudioChannels = config.numberOfAudioChannels;\r\n\r\n            // todo: \"slice(0)\" --- is it causes loop? Should be removed?\r\n            var leftBuffers = config.leftBuffers.slice(0);\r\n            var rightBuffers = config.rightBuffers.slice(0);\r\n            var sampleRate = config.sampleRate;\r\n            var internalInterleavedLength = config.internalInterleavedLength;\r\n            var desiredSampRate = config.desiredSampRate;\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\r\n                rightBuffers = mergeBuffers(rightBuffers, internalInterleavedLength);\r\n\r\n                if (desiredSampRate) {\r\n                    leftBuffers = interpolateArray(leftBuffers, desiredSampRate, sampleRate);\r\n                    rightBuffers = interpolateArray(rightBuffers, desiredSampRate, sampleRate);\r\n                }\r\n            }\r\n\r\n            if (numberOfAudioChannels === 1) {\r\n                leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\r\n\r\n                if (desiredSampRate) {\r\n                    leftBuffers = interpolateArray(leftBuffers, desiredSampRate, sampleRate);\r\n                }\r\n            }\r\n\r\n            // set sample rate as desired sample rate\r\n            if (desiredSampRate) {\r\n                sampleRate = desiredSampRate;\r\n            }\r\n\r\n            // for changing the sampling rate, reference:\r\n            // http://stackoverflow.com/a/28977136/552182\r\n            function interpolateArray(data, newSampleRate, oldSampleRate) {\r\n                var fitCount = Math.round(data.length * (newSampleRate / oldSampleRate));\r\n                var newData = [];\r\n                var springFactor = Number((data.length - 1) / (fitCount - 1));\r\n                newData[0] = data[0];\r\n                for (var i = 1; i < fitCount - 1; i++) {\r\n                    var tmp = i * springFactor;\r\n                    var before = Number(Math.floor(tmp)).toFixed();\r\n                    var after = Number(Math.ceil(tmp)).toFixed();\r\n                    var atPoint = tmp - before;\r\n                    newData[i] = linearInterpolate(data[before], data[after], atPoint);\r\n                }\r\n                newData[fitCount - 1] = data[data.length - 1];\r\n                return newData;\r\n            }\r\n\r\n            function linearInterpolate(before, after, atPoint) {\r\n                return before + (after - before) * atPoint;\r\n            }\r\n\r\n            function mergeBuffers(channelBuffer, rLength) {\r\n                var result = new Float64Array(rLength);\r\n                var offset = 0;\r\n                var lng = channelBuffer.length;\r\n\r\n                for (var i = 0; i < lng; i++) {\r\n                    var buffer = channelBuffer[i];\r\n                    result.set(buffer, offset);\r\n                    offset += buffer.length;\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            function interleave(leftChannel, rightChannel) {\r\n                var length = leftChannel.length + rightChannel.length;\r\n\r\n                var result = new Float64Array(length);\r\n\r\n                var inputIndex = 0;\r\n\r\n                for (var index = 0; index < length;) {\r\n                    result[index++] = leftChannel[inputIndex];\r\n                    result[index++] = rightChannel[inputIndex];\r\n                    inputIndex++;\r\n                }\r\n                return result;\r\n            }\r\n\r\n            function writeUTFBytes(view, offset, string) {\r\n                var lng = string.length;\r\n                for (var i = 0; i < lng; i++) {\r\n                    view.setUint8(offset + i, string.charCodeAt(i));\r\n                }\r\n            }\r\n\r\n            // interleave both channels together\r\n            var interleaved;\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                interleaved = interleave(leftBuffers, rightBuffers);\r\n            }\r\n\r\n            if (numberOfAudioChannels === 1) {\r\n                interleaved = leftBuffers;\r\n            }\r\n\r\n            var interleavedLength = interleaved.length;\r\n\r\n            // create wav file\r\n            var resultingBufferLength = 44 + interleavedLength * 2;\r\n\r\n            var buffer = new ArrayBuffer(resultingBufferLength);\r\n\r\n            var view = new DataView(buffer);\r\n\r\n            // RIFF chunk descriptor/identifier \r\n            writeUTFBytes(view, 0, 'RIFF');\r\n\r\n            // RIFF chunk length\r\n            // changed \"44\" to \"36\" via #401\r\n            view.setUint32(4, 36 + interleavedLength * 2, true);\r\n\r\n            // RIFF type \r\n            writeUTFBytes(view, 8, 'WAVE');\r\n\r\n            // format chunk identifier \r\n            // FMT sub-chunk\r\n            writeUTFBytes(view, 12, 'fmt ');\r\n\r\n            // format chunk length \r\n            view.setUint32(16, 16, true);\r\n\r\n            // sample format (raw)\r\n            view.setUint16(20, 1, true);\r\n\r\n            // stereo (2 channels)\r\n            view.setUint16(22, numberOfAudioChannels, true);\r\n\r\n            // sample rate \r\n            view.setUint32(24, sampleRate, true);\r\n\r\n            // byte rate (sample rate * block align)\r\n            view.setUint32(28, sampleRate * numberOfAudioChannels * 2, true);\r\n\r\n            // block align (channel count * bytes per sample) \r\n            view.setUint16(32, numberOfAudioChannels * 2, true);\r\n\r\n            // bits per sample \r\n            view.setUint16(34, 16, true);\r\n\r\n            // data sub-chunk\r\n            // data chunk identifier \r\n            writeUTFBytes(view, 36, 'data');\r\n\r\n            // data chunk length \r\n            view.setUint32(40, interleavedLength * 2, true);\r\n\r\n            // write the PCM samples\r\n            var lng = interleavedLength;\r\n            var index = 44;\r\n            var volume = 1;\r\n            for (var i = 0; i < lng; i++) {\r\n                view.setInt16(index, interleaved[i] * (0x7FFF * volume), true);\r\n                index += 2;\r\n            }\r\n\r\n            if (cb) {\r\n                return cb({\r\n                    buffer: buffer,\r\n                    view: view\r\n                });\r\n            }\r\n\r\n            postMessage({\r\n                buffer: buffer,\r\n                view: view\r\n            });\r\n        }\r\n\r\n        if (config.noWorker) {\r\n            mergeAudioBuffers(config, function(data) {\r\n                callback(data.buffer, data.view);\r\n            });\r\n            return;\r\n        }\r\n\r\n\r\n        var webWorker = processInWebWorker(mergeAudioBuffers);\r\n\r\n        webWorker.onmessage = function(event) {\r\n            callback(event.data.buffer, event.data.view);\r\n\r\n            // release memory\r\n            URL.revokeObjectURL(webWorker.workerURL);\r\n\r\n            // kill webworker (or Chrome will kill your page after ~25 calls)\r\n            webWorker.terminate();\r\n        };\r\n\r\n        webWorker.postMessage(config);\r\n    }\r\n\r\n    function processInWebWorker(_function) {\r\n        var workerURL = URL.createObjectURL(new Blob([_function.toString(),\r\n            ';this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n        ], {\r\n            type: 'application/javascript'\r\n        }));\r\n\r\n        var worker = new Worker(workerURL);\r\n        worker.workerURL = workerURL;\r\n        return worker;\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        // stop recording\r\n        recording = false;\r\n\r\n        mergeLeftRightBuffers({\r\n            desiredSampRate: desiredSampRate,\r\n            sampleRate: sampleRate,\r\n            numberOfAudioChannels: numberOfAudioChannels,\r\n            internalInterleavedLength: recordingLength,\r\n            leftBuffers: leftchannel,\r\n            rightBuffers: numberOfAudioChannels === 1 ? [] : rightchannel,\r\n            noWorker: config.noWorker\r\n        }, function(buffer, view) {\r\n            /**\r\n             * @property {Blob} blob - The recorded blob object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var blob = recorder.blob;\r\n             * });\r\n             */\r\n            self.blob = new Blob([view], {\r\n                type: 'audio/wav'\r\n            });\r\n\r\n            /**\r\n             * @property {ArrayBuffer} buffer - The recorded buffer object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var buffer = recorder.buffer;\r\n             * });\r\n             */\r\n            self.buffer = new ArrayBuffer(view.buffer.byteLength);\r\n\r\n            /**\r\n             * @property {DataView} view - The recorded data-view object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var view = recorder.view;\r\n             * });\r\n             */\r\n            self.view = view;\r\n\r\n            self.sampleRate = desiredSampRate || sampleRate;\r\n            self.bufferSize = bufferSize;\r\n\r\n            // recorded audio length\r\n            self.length = recordingLength;\r\n\r\n            isAudioProcessStarted = false;\r\n\r\n            if (callback) {\r\n                callback(self.blob);\r\n            }\r\n        });\r\n    };\r\n\r\n    if (typeof RecordRTC.Storage === 'undefined') {\r\n        RecordRTC.Storage = {\r\n            AudioContextConstructor: null,\r\n            AudioContext: window.AudioContext || window.webkitAudioContext\r\n        };\r\n    }\r\n\r\n    if (!RecordRTC.Storage.AudioContextConstructor || RecordRTC.Storage.AudioContextConstructor.state === 'closed') {\r\n        RecordRTC.Storage.AudioContextConstructor = new RecordRTC.Storage.AudioContext();\r\n    }\r\n\r\n    var context = RecordRTC.Storage.AudioContextConstructor;\r\n\r\n    // creates an audio node from the microphone incoming stream\r\n    var audioInput = context.createMediaStreamSource(mediaStream);\r\n\r\n    var legalBufferValues = [0, 256, 512, 1024, 2048, 4096, 8192, 16384];\r\n\r\n    /**\r\n     * From the spec: This value controls how frequently the audioprocess event is\r\n     * dispatched and how many sample-frames need to be processed each call.\r\n     * Lower values for buffer size will result in a lower (better) latency.\r\n     * Higher values will be necessary to avoid audio breakup and glitches\r\n     * The size of the buffer (in sample-frames) which needs to\r\n     * be processed each time onprocessaudio is called.\r\n     * Legal values are (256, 512, 1024, 2048, 4096, 8192, 16384).\r\n     * @property {number} bufferSize - Buffer-size for how frequently the audioprocess event is dispatched.\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder = new StereoAudioRecorder(mediaStream, {\r\n     *     bufferSize: 4096\r\n     * });\r\n     */\r\n\r\n    // \"0\" means, let chrome decide the most accurate buffer-size for current platform.\r\n    var bufferSize = typeof config.bufferSize === 'undefined' ? 4096 : config.bufferSize;\r\n\r\n    if (legalBufferValues.indexOf(bufferSize) === -1) {\r\n        if (!config.disableLogs) {\r\n            console.log('Legal values for buffer-size are ' + JSON.stringify(legalBufferValues, null, '\\t'));\r\n        }\r\n    }\r\n\r\n    if (context.createJavaScriptNode) {\r\n        jsAudioNode = context.createJavaScriptNode(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\r\n    } else if (context.createScriptProcessor) {\r\n        jsAudioNode = context.createScriptProcessor(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\r\n    } else {\r\n        throw 'WebAudio API has no support on this browser.';\r\n    }\r\n\r\n    // connect the stream to the script processor\r\n    audioInput.connect(jsAudioNode);\r\n\r\n    if (!config.bufferSize) {\r\n        bufferSize = jsAudioNode.bufferSize; // device buffer-size\r\n    }\r\n\r\n    /**\r\n     * The sample rate (in sample-frames per second) at which the\r\n     * AudioContext handles audio. It is assumed that all AudioNodes\r\n     * in the context run at this rate. In making this assumption,\r\n     * sample-rate converters or \"varispeed\" processors are not supported\r\n     * in real-time processing.\r\n     * The sampleRate parameter describes the sample-rate of the\r\n     * linear PCM audio data in the buffer in sample-frames per second.\r\n     * An implementation must support sample-rates in at least\r\n     * the range 22050 to 96000.\r\n     * @property {number} sampleRate - Buffer-size for how frequently the audioprocess event is dispatched.\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder = new StereoAudioRecorder(mediaStream, {\r\n     *     sampleRate: 44100\r\n     * });\r\n     */\r\n    var sampleRate = typeof config.sampleRate !== 'undefined' ? config.sampleRate : context.sampleRate || 44100;\r\n\r\n    if (sampleRate < 22050 || sampleRate > 96000) {\r\n        // Ref: http://stackoverflow.com/a/26303918/552182\r\n        if (!config.disableLogs) {\r\n            console.log('sample-rate must be under range 22050 and 96000.');\r\n        }\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        if (config.desiredSampRate) {\r\n            console.log('Desired sample-rate: ' + config.desiredSampRate);\r\n        }\r\n    }\r\n\r\n    var isPaused = false;\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPaused = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (isMediaStreamActive() === false) {\r\n            throw 'Please make sure MediaStream is active.';\r\n        }\r\n\r\n        if (!recording) {\r\n            if (!config.disableLogs) {\r\n                console.log('Seems recording has been restarted.');\r\n            }\r\n            this.record();\r\n            return;\r\n        }\r\n\r\n        isPaused = false;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        config.checkForInactiveTracks = false;\r\n\r\n        if (recording) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function resetVariables() {\r\n        leftchannel = [];\r\n        rightchannel = [];\r\n        recordingLength = 0;\r\n        isAudioProcessStarted = false;\r\n        recording = false;\r\n        isPaused = false;\r\n        context = null;\r\n\r\n        self.leftchannel = leftchannel;\r\n        self.rightchannel = rightchannel;\r\n        self.numberOfAudioChannels = numberOfAudioChannels;\r\n        self.desiredSampRate = desiredSampRate;\r\n        self.sampleRate = sampleRate;\r\n        self.recordingLength = recordingLength;\r\n\r\n        intervalsBasedBuffers = {\r\n            left: [],\r\n            right: [],\r\n            recordingLength: 0\r\n        };\r\n    }\r\n\r\n    function clearRecordedDataCB() {\r\n        if (jsAudioNode) {\r\n            jsAudioNode.onaudioprocess = null;\r\n            jsAudioNode.disconnect();\r\n            jsAudioNode = null;\r\n        }\r\n\r\n        if (audioInput) {\r\n            audioInput.disconnect();\r\n            audioInput = null;\r\n        }\r\n\r\n        resetVariables();\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'StereoAudioRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var isAudioProcessStarted = false;\r\n\r\n    function onAudioProcessDataAvailable(e) {\r\n        if (isPaused) {\r\n            return;\r\n        }\r\n\r\n        if (isMediaStreamActive() === false) {\r\n            if (!config.disableLogs) {\r\n                console.log('MediaStream seems stopped.');\r\n            }\r\n            jsAudioNode.disconnect();\r\n            recording = false;\r\n        }\r\n\r\n        if (!recording) {\r\n            if (audioInput) {\r\n                audioInput.disconnect();\r\n                audioInput = null;\r\n            }\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * This method is called on \"onaudioprocess\" event's first invocation.\r\n         * @method {function} onAudioProcessStarted\r\n         * @memberof StereoAudioRecorder\r\n         * @example\r\n         * recorder.onAudioProcessStarted: function() { };\r\n         */\r\n        if (!isAudioProcessStarted) {\r\n            isAudioProcessStarted = true;\r\n            if (config.onAudioProcessStarted) {\r\n                config.onAudioProcessStarted();\r\n            }\r\n\r\n            if (config.initCallback) {\r\n                config.initCallback();\r\n            }\r\n        }\r\n\r\n        var left = e.inputBuffer.getChannelData(0);\r\n\r\n        // we clone the samples\r\n        var chLeft = new Float32Array(left);\r\n        leftchannel.push(chLeft);\r\n\r\n        if (numberOfAudioChannels === 2) {\r\n            var right = e.inputBuffer.getChannelData(1);\r\n            var chRight = new Float32Array(right);\r\n            rightchannel.push(chRight);\r\n        }\r\n\r\n        recordingLength += bufferSize;\r\n\r\n        // export raw PCM\r\n        self.recordingLength = recordingLength;\r\n\r\n        if (typeof config.timeSlice !== 'undefined') {\r\n            intervalsBasedBuffers.recordingLength += bufferSize;\r\n            intervalsBasedBuffers.left.push(chLeft);\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                intervalsBasedBuffers.right.push(chRight);\r\n            }\r\n        }\r\n    }\r\n\r\n    jsAudioNode.onaudioprocess = onAudioProcessDataAvailable;\r\n\r\n    // to prevent self audio to be connected with speakers\r\n    if (context.createMediaStreamDestination) {\r\n        jsAudioNode.connect(context.createMediaStreamDestination());\r\n    } else {\r\n        jsAudioNode.connect(context.destination);\r\n    }\r\n\r\n    // export raw PCM\r\n    this.leftchannel = leftchannel;\r\n    this.rightchannel = rightchannel;\r\n    this.numberOfAudioChannels = numberOfAudioChannels;\r\n    this.desiredSampRate = desiredSampRate;\r\n    this.sampleRate = sampleRate;\r\n    self.recordingLength = recordingLength;\r\n\r\n    // helper for intervals based blobs\r\n    var intervalsBasedBuffers = {\r\n        left: [],\r\n        right: [],\r\n        recordingLength: 0\r\n    };\r\n\r\n    // this looper is used to support intervals based blobs (via timeSlice+ondataavailable)\r\n    function looper() {\r\n        if (!recording || typeof config.ondataavailable !== 'function' || typeof config.timeSlice === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (intervalsBasedBuffers.left.length) {\r\n            mergeLeftRightBuffers({\r\n                desiredSampRate: desiredSampRate,\r\n                sampleRate: sampleRate,\r\n                numberOfAudioChannels: numberOfAudioChannels,\r\n                internalInterleavedLength: intervalsBasedBuffers.recordingLength,\r\n                leftBuffers: intervalsBasedBuffers.left,\r\n                rightBuffers: numberOfAudioChannels === 1 ? [] : intervalsBasedBuffers.right\r\n            }, function(buffer, view) {\r\n                var blob = new Blob([view], {\r\n                    type: 'audio/wav'\r\n                });\r\n                config.ondataavailable(blob);\r\n\r\n                setTimeout(looper, config.timeSlice);\r\n            });\r\n\r\n            intervalsBasedBuffers = {\r\n                left: [],\r\n                right: [],\r\n                recordingLength: 0\r\n            };\r\n        } else {\r\n            setTimeout(looper, config.timeSlice);\r\n        }\r\n    }\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.StereoAudioRecorder = StereoAudioRecorder;\r\n}\r\n\r\n// _________________\r\n// CanvasRecorder.js\r\n\r\n/**\r\n * CanvasRecorder is a standalone class used by {@link RecordRTC} to bring HTML5-Canvas recording into video WebM. It uses HTML2Canvas library and runs top over {@link Whammy}.\r\n * @summary HTML2Canvas recording into video WebM.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef CanvasRecorder\r\n * @class\r\n * @example\r\n * var recorder = new CanvasRecorder(htmlElement, { disableLogs: true, useWhammyRecorder: true });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {HTMLElement} htmlElement - querySelector/getElementById/getElementsByTagName[0]/etc.\r\n * @param {object} config - {disableLogs:true, initCallback: function}\r\n */\r\n\r\nfunction CanvasRecorder(htmlElement, config) {\r\n    if (typeof html2canvas === 'undefined') {\r\n        throw 'Please link: https://www.webrtc-experiment.com/screenshot.js';\r\n    }\r\n\r\n    config = config || {};\r\n    if (!config.frameInterval) {\r\n        config.frameInterval = 10;\r\n    }\r\n\r\n    // via DetectRTC.js\r\n    var isCanvasSupportsStreamCapturing = false;\r\n    ['captureStream', 'mozCaptureStream', 'webkitCaptureStream'].forEach(function(item) {\r\n        if (item in document.createElement('canvas')) {\r\n            isCanvasSupportsStreamCapturing = true;\r\n        }\r\n    });\r\n\r\n    var _isChrome = (!!window.webkitRTCPeerConnection || !!window.webkitGetUserMedia) && !!window.chrome;\r\n\r\n    var chromeVersion = 50;\r\n    var matchArray = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\r\n    if (_isChrome && matchArray && matchArray[2]) {\r\n        chromeVersion = parseInt(matchArray[2], 10);\r\n    }\r\n\r\n    if (_isChrome && chromeVersion < 52) {\r\n        isCanvasSupportsStreamCapturing = false;\r\n    }\r\n\r\n    if (config.useWhammyRecorder) {\r\n        isCanvasSupportsStreamCapturing = false;\r\n    }\r\n\r\n    var globalCanvas, mediaStreamRecorder;\r\n\r\n    if (isCanvasSupportsStreamCapturing) {\r\n        if (!config.disableLogs) {\r\n            console.log('Your browser supports both MediRecorder API and canvas.captureStream!');\r\n        }\r\n\r\n        if (htmlElement instanceof HTMLCanvasElement) {\r\n            globalCanvas = htmlElement;\r\n        } else if (htmlElement instanceof CanvasRenderingContext2D) {\r\n            globalCanvas = htmlElement.canvas;\r\n        } else {\r\n            throw 'Please pass either HTMLCanvasElement or CanvasRenderingContext2D.';\r\n        }\r\n    } else if (!!navigator.mozGetUserMedia) {\r\n        if (!config.disableLogs) {\r\n            console.error('Canvas recording is NOT supported in Firefox.');\r\n        }\r\n    }\r\n\r\n    var isRecording;\r\n\r\n    /**\r\n     * This method records Canvas.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        isRecording = true;\r\n\r\n        if (isCanvasSupportsStreamCapturing && !config.useWhammyRecorder) {\r\n            // CanvasCaptureMediaStream\r\n            var canvasMediaStream;\r\n            if ('captureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.captureStream(25); // 25 FPS\r\n            } else if ('mozCaptureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.mozCaptureStream(25);\r\n            } else if ('webkitCaptureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.webkitCaptureStream(25);\r\n            }\r\n\r\n            try {\r\n                var mdStream = new MediaStream();\r\n                mdStream.addTrack(getTracks(canvasMediaStream, 'video')[0]);\r\n                canvasMediaStream = mdStream;\r\n            } catch (e) {}\r\n\r\n            if (!canvasMediaStream) {\r\n                throw 'captureStream API are NOT available.';\r\n            }\r\n\r\n            // Note: Jan 18, 2016 status is that, \r\n            // Firefox MediaRecorder API can't record CanvasCaptureMediaStream object.\r\n            mediaStreamRecorder = new MediaStreamRecorder(canvasMediaStream, {\r\n                mimeType: config.mimeType || 'video/webm'\r\n            });\r\n            mediaStreamRecorder.record();\r\n        } else {\r\n            whammy.frames = [];\r\n            lastTime = new Date().getTime();\r\n            drawCanvasFrame();\r\n        }\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    this.getWebPImages = function(callback) {\r\n        if (htmlElement.nodeName.toLowerCase() !== 'canvas') {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        var framesLength = whammy.frames.length;\r\n        whammy.frames.forEach(function(frame, idx) {\r\n            var framesRemaining = framesLength - idx;\r\n            if (!config.disableLogs) {\r\n                console.log(framesRemaining + '/' + framesLength + ' frames remaining');\r\n            }\r\n\r\n            if (config.onEncodingCallback) {\r\n                config.onEncodingCallback(framesRemaining, framesLength);\r\n            }\r\n\r\n            var webp = frame.image.toDataURL('image/webp', 1);\r\n            whammy.frames[idx].image = webp;\r\n        });\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Generating WebM');\r\n        }\r\n\r\n        callback();\r\n    };\r\n\r\n    /**\r\n     * This method stops recording Canvas.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        isRecording = false;\r\n\r\n        var that = this;\r\n\r\n        if (isCanvasSupportsStreamCapturing && mediaStreamRecorder) {\r\n            mediaStreamRecorder.stop(callback);\r\n            return;\r\n        }\r\n\r\n        this.getWebPImages(function() {\r\n            /**\r\n             * @property {Blob} blob - Recorded frames in video/webm blob.\r\n             * @memberof CanvasRecorder\r\n             * @example\r\n             * recorder.stop(function() {\r\n             *     var blob = recorder.blob;\r\n             * });\r\n             */\r\n            whammy.compile(function(blob) {\r\n                if (!config.disableLogs) {\r\n                    console.log('Recording finished!');\r\n                }\r\n\r\n                that.blob = blob;\r\n\r\n                if (that.blob.forEach) {\r\n                    that.blob = new Blob([], {\r\n                        type: 'video/webm'\r\n                    });\r\n                }\r\n\r\n                if (callback) {\r\n                    callback(that.blob);\r\n                }\r\n\r\n                whammy.frames = [];\r\n            });\r\n        });\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n\r\n        if (mediaStreamRecorder instanceof MediaStreamRecorder) {\r\n            mediaStreamRecorder.pause();\r\n            return;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n\r\n        if (mediaStreamRecorder instanceof MediaStreamRecorder) {\r\n            mediaStreamRecorder.resume();\r\n            return;\r\n        }\r\n\r\n        if (!isRecording) {\r\n            this.record();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (isRecording) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        whammy.frames = [];\r\n        isRecording = false;\r\n        isPausedRecording = false;\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'CanvasRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    function cloneCanvas() {\r\n        //create a new canvas\r\n        var newCanvas = document.createElement('canvas');\r\n        var context = newCanvas.getContext('2d');\r\n\r\n        //set dimensions\r\n        newCanvas.width = htmlElement.width;\r\n        newCanvas.height = htmlElement.height;\r\n\r\n        //apply the old canvas to the new one\r\n        context.drawImage(htmlElement, 0, 0);\r\n\r\n        //return the new canvas\r\n        return newCanvas;\r\n    }\r\n\r\n    function drawCanvasFrame() {\r\n        if (isPausedRecording) {\r\n            lastTime = new Date().getTime();\r\n            return setTimeout(drawCanvasFrame, 500);\r\n        }\r\n\r\n        if (htmlElement.nodeName.toLowerCase() === 'canvas') {\r\n            var duration = new Date().getTime() - lastTime;\r\n            // via #206, by Jack i.e. @Seymourr\r\n            lastTime = new Date().getTime();\r\n\r\n            whammy.frames.push({\r\n                image: cloneCanvas(),\r\n                duration: duration\r\n            });\r\n\r\n            if (isRecording) {\r\n                setTimeout(drawCanvasFrame, config.frameInterval);\r\n            }\r\n            return;\r\n        }\r\n\r\n        html2canvas(htmlElement, {\r\n            grabMouse: typeof config.showMousePointer === 'undefined' || config.showMousePointer,\r\n            onrendered: function(canvas) {\r\n                var duration = new Date().getTime() - lastTime;\r\n                if (!duration) {\r\n                    return setTimeout(drawCanvasFrame, config.frameInterval);\r\n                }\r\n\r\n                // via #206, by Jack i.e. @Seymourr\r\n                lastTime = new Date().getTime();\r\n\r\n                whammy.frames.push({\r\n                    image: canvas.toDataURL('image/webp', 1),\r\n                    duration: duration\r\n                });\r\n\r\n                if (isRecording) {\r\n                    setTimeout(drawCanvasFrame, config.frameInterval);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    var lastTime = new Date().getTime();\r\n\r\n    var whammy = new Whammy.Video(100);\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.CanvasRecorder = CanvasRecorder;\r\n}\n\r\n// _________________\r\n// WhammyRecorder.js\r\n\r\n/**\r\n * WhammyRecorder is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It runs top over {@link Whammy}.\r\n * @summary Video recording feature in Chrome.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef WhammyRecorder\r\n * @class\r\n * @example\r\n * var recorder = new WhammyRecorder(mediaStream);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {disableLogs: true, initCallback: function, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction WhammyRecorder(mediaStream, config) {\r\n\r\n    config = config || {};\r\n\r\n    if (!config.frameInterval) {\r\n        config.frameInterval = 10;\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        console.log('Using frames-interval:', config.frameInterval);\r\n    }\r\n\r\n    /**\r\n     * This method records video.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (!config.width) {\r\n            config.width = 320;\r\n        }\r\n\r\n        if (!config.height) {\r\n            config.height = 240;\r\n        }\r\n\r\n        if (!config.video) {\r\n            config.video = {\r\n                width: config.width,\r\n                height: config.height\r\n            };\r\n        }\r\n\r\n        if (!config.canvas) {\r\n            config.canvas = {\r\n                width: config.width,\r\n                height: config.height\r\n            };\r\n        }\r\n\r\n        canvas.width = config.canvas.width || 320;\r\n        canvas.height = config.canvas.height || 240;\r\n\r\n        context = canvas.getContext('2d');\r\n\r\n        // setting defaults\r\n        if (config.video && config.video instanceof HTMLVideoElement) {\r\n            video = config.video.cloneNode();\r\n\r\n            if (config.initCallback) {\r\n                config.initCallback();\r\n            }\r\n        } else {\r\n            video = document.createElement('video');\r\n\r\n            setSrcObject(mediaStream, video);\r\n\r\n            video.onloadedmetadata = function() { // \"onloadedmetadata\" may NOT work in FF?\r\n                if (config.initCallback) {\r\n                    config.initCallback();\r\n                }\r\n            };\r\n\r\n            video.width = config.video.width;\r\n            video.height = config.video.height;\r\n        }\r\n\r\n        video.muted = true;\r\n        video.play();\r\n\r\n        lastTime = new Date().getTime();\r\n        whammy = new Whammy.Video();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('canvas resolutions', canvas.width, '*', canvas.height);\r\n            console.log('video width/height', video.width || canvas.width, '*', video.height || canvas.height);\r\n        }\r\n\r\n        drawFrames(config.frameInterval);\r\n    };\r\n\r\n    /**\r\n     * Draw and push frames to Whammy\r\n     * @param {integer} frameInterval - set minimum interval (in milliseconds) between each time we push a frame to Whammy\r\n     */\r\n    function drawFrames(frameInterval) {\r\n        frameInterval = typeof frameInterval !== 'undefined' ? frameInterval : 10;\r\n\r\n        var duration = new Date().getTime() - lastTime;\r\n        if (!duration) {\r\n            return setTimeout(drawFrames, frameInterval, frameInterval);\r\n        }\r\n\r\n        if (isPausedRecording) {\r\n            lastTime = new Date().getTime();\r\n            return setTimeout(drawFrames, 100);\r\n        }\r\n\r\n        // via #206, by Jack i.e. @Seymourr\r\n        lastTime = new Date().getTime();\r\n\r\n        if (video.paused) {\r\n            // via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\r\n            // Tweak for Android Chrome\r\n            video.play();\r\n        }\r\n\r\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n        whammy.frames.push({\r\n            duration: duration,\r\n            image: canvas.toDataURL('image/webp')\r\n        });\r\n\r\n        if (!isStopDrawing) {\r\n            setTimeout(drawFrames, frameInterval, frameInterval);\r\n        }\r\n    }\r\n\r\n    function asyncLoop(o) {\r\n        var i = -1,\r\n            length = o.length;\r\n\r\n        (function loop() {\r\n            i++;\r\n            if (i === length) {\r\n                o.callback();\r\n                return;\r\n            }\r\n\r\n            // \"setTimeout\" added by Jim McLeod\r\n            setTimeout(function() {\r\n                o.functionToLoop(loop, i);\r\n            }, 1);\r\n        })();\r\n    }\r\n\r\n\r\n    /**\r\n     * remove black frames from the beginning to the specified frame\r\n     * @param {Array} _frames - array of frames to be checked\r\n     * @param {number} _framesToCheck - number of frame until check will be executed (-1 - will drop all frames until frame not matched will be found)\r\n     * @param {number} _pixTolerance - 0 - very strict (only black pixel color) ; 1 - all\r\n     * @param {number} _frameTolerance - 0 - very strict (only black frame color) ; 1 - all\r\n     * @returns {Array} - array of frames\r\n     */\r\n    // pull#293 by @volodalexey\r\n    function dropBlackFrames(_frames, _framesToCheck, _pixTolerance, _frameTolerance, callback) {\r\n        var localCanvas = document.createElement('canvas');\r\n        localCanvas.width = canvas.width;\r\n        localCanvas.height = canvas.height;\r\n        var context2d = localCanvas.getContext('2d');\r\n        var resultFrames = [];\r\n\r\n        var checkUntilNotBlack = _framesToCheck === -1;\r\n        var endCheckFrame = (_framesToCheck && _framesToCheck > 0 && _framesToCheck <= _frames.length) ?\r\n            _framesToCheck : _frames.length;\r\n        var sampleColor = {\r\n            r: 0,\r\n            g: 0,\r\n            b: 0\r\n        };\r\n        var maxColorDifference = Math.sqrt(\r\n            Math.pow(255, 2) +\r\n            Math.pow(255, 2) +\r\n            Math.pow(255, 2)\r\n        );\r\n        var pixTolerance = _pixTolerance && _pixTolerance >= 0 && _pixTolerance <= 1 ? _pixTolerance : 0;\r\n        var frameTolerance = _frameTolerance && _frameTolerance >= 0 && _frameTolerance <= 1 ? _frameTolerance : 0;\r\n        var doNotCheckNext = false;\r\n\r\n        asyncLoop({\r\n            length: endCheckFrame,\r\n            functionToLoop: function(loop, f) {\r\n                var matchPixCount, endPixCheck, maxPixCount;\r\n\r\n                var finishImage = function() {\r\n                    if (!doNotCheckNext && maxPixCount - matchPixCount <= maxPixCount * frameTolerance) {\r\n                        // console.log('removed black frame : ' + f + ' ; frame duration ' + _frames[f].duration);\r\n                    } else {\r\n                        // console.log('frame is passed : ' + f);\r\n                        if (checkUntilNotBlack) {\r\n                            doNotCheckNext = true;\r\n                        }\r\n                        resultFrames.push(_frames[f]);\r\n                    }\r\n                    loop();\r\n                };\r\n\r\n                if (!doNotCheckNext) {\r\n                    var image = new Image();\r\n                    image.onload = function() {\r\n                        context2d.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n                        var imageData = context2d.getImageData(0, 0, canvas.width, canvas.height);\r\n                        matchPixCount = 0;\r\n                        endPixCheck = imageData.data.length;\r\n                        maxPixCount = imageData.data.length / 4;\r\n\r\n                        for (var pix = 0; pix < endPixCheck; pix += 4) {\r\n                            var currentColor = {\r\n                                r: imageData.data[pix],\r\n                                g: imageData.data[pix + 1],\r\n                                b: imageData.data[pix + 2]\r\n                            };\r\n                            var colorDifference = Math.sqrt(\r\n                                Math.pow(currentColor.r - sampleColor.r, 2) +\r\n                                Math.pow(currentColor.g - sampleColor.g, 2) +\r\n                                Math.pow(currentColor.b - sampleColor.b, 2)\r\n                            );\r\n                            // difference in color it is difference in color vectors (r1,g1,b1) <=> (r2,g2,b2)\r\n                            if (colorDifference <= maxColorDifference * pixTolerance) {\r\n                                matchPixCount++;\r\n                            }\r\n                        }\r\n                        finishImage();\r\n                    };\r\n                    image.src = _frames[f].image;\r\n                } else {\r\n                    finishImage();\r\n                }\r\n            },\r\n            callback: function() {\r\n                resultFrames = resultFrames.concat(_frames.slice(endCheckFrame));\r\n\r\n                if (resultFrames.length <= 0) {\r\n                    // at least one last frame should be available for next manipulation\r\n                    // if total duration of all frames will be < 1000 than ffmpeg doesn't work well...\r\n                    resultFrames.push(_frames[_frames.length - 1]);\r\n                }\r\n                callback(resultFrames);\r\n            }\r\n        });\r\n    }\r\n\r\n    var isStopDrawing = false;\r\n\r\n    /**\r\n     * This method stops recording video.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        isStopDrawing = true;\r\n\r\n        var _this = this;\r\n        // analyse of all frames takes some time!\r\n        setTimeout(function() {\r\n            // e.g. dropBlackFrames(frames, 10, 1, 1) - will cut all 10 frames\r\n            // e.g. dropBlackFrames(frames, 10, 0.5, 0.5) - will analyse 10 frames\r\n            // e.g. dropBlackFrames(frames, 10) === dropBlackFrames(frames, 10, 0, 0) - will analyse 10 frames with strict black color\r\n            dropBlackFrames(whammy.frames, -1, null, null, function(frames) {\r\n                whammy.frames = frames;\r\n\r\n                // to display advertisement images!\r\n                if (config.advertisement && config.advertisement.length) {\r\n                    whammy.frames = config.advertisement.concat(whammy.frames);\r\n                }\r\n\r\n                /**\r\n                 * @property {Blob} blob - Recorded frames in video/webm blob.\r\n                 * @memberof WhammyRecorder\r\n                 * @example\r\n                 * recorder.stop(function() {\r\n                 *     var blob = recorder.blob;\r\n                 * });\r\n                 */\r\n                whammy.compile(function(blob) {\r\n                    _this.blob = blob;\r\n\r\n                    if (_this.blob.forEach) {\r\n                        _this.blob = new Blob([], {\r\n                            type: 'video/webm'\r\n                        });\r\n                    }\r\n\r\n                    if (callback) {\r\n                        callback(_this.blob);\r\n                    }\r\n                });\r\n            });\r\n        }, 10);\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n\r\n        if (isStopDrawing) {\r\n            this.record();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (!isStopDrawing) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        whammy.frames = [];\r\n        isStopDrawing = true;\r\n        isPausedRecording = false;\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'WhammyRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n\r\n    var video;\r\n    var lastTime;\r\n    var whammy;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.WhammyRecorder = WhammyRecorder;\r\n}\n\r\n// https://github.com/antimatter15/whammy/blob/master/LICENSE\r\n// _________\r\n// Whammy.js\r\n\r\n// todo: Firefox now supports webp for webm containers!\r\n// their MediaRecorder implementation works well!\r\n// should we provide an option to record via Whammy.js or MediaRecorder API is a better solution?\r\n\r\n/**\r\n * Whammy is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It is written by {@link https://github.com/antimatter15|antimatter15}\r\n * @summary A real time javascript webm encoder based on a canvas hack.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef Whammy\r\n * @class\r\n * @example\r\n * var recorder = new Whammy().Video(15);\r\n * recorder.add(context || canvas || dataURL);\r\n * var output = recorder.compile();\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\nvar Whammy = (function() {\r\n    // a more abstract-ish API\r\n\r\n    function WhammyVideo(duration) {\r\n        this.frames = [];\r\n        this.duration = duration || 1;\r\n        this.quality = 0.8;\r\n    }\r\n\r\n    /**\r\n     * Pass Canvas or Context or image/webp(string) to {@link Whammy} encoder.\r\n     * @method\r\n     * @memberof Whammy\r\n     * @example\r\n     * recorder = new Whammy().Video(0.8, 100);\r\n     * recorder.add(canvas || context || 'image/webp');\r\n     * @param {string} frame - Canvas || Context || image/webp\r\n     * @param {number} duration - Stick a duration (in milliseconds)\r\n     */\r\n    WhammyVideo.prototype.add = function(frame, duration) {\r\n        if ('canvas' in frame) { //CanvasRenderingContext2D\r\n            frame = frame.canvas;\r\n        }\r\n\r\n        if ('toDataURL' in frame) {\r\n            frame = frame.toDataURL('image/webp', this.quality);\r\n        }\r\n\r\n        if (!(/^data:image\\/webp;base64,/ig).test(frame)) {\r\n            throw 'Input must be formatted properly as a base64 encoded DataURI of type image/webp';\r\n        }\r\n        this.frames.push({\r\n            image: frame,\r\n            duration: duration || this.duration\r\n        });\r\n    };\r\n\r\n    function processInWebWorker(_function) {\r\n        var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n            'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n        ], {\r\n            type: 'application/javascript'\r\n        }));\r\n\r\n        var worker = new Worker(blob);\r\n        URL.revokeObjectURL(blob);\r\n        return worker;\r\n    }\r\n\r\n    function whammyInWebWorker(frames) {\r\n        function ArrayToWebM(frames) {\r\n            var info = checkFrames(frames);\r\n            if (!info) {\r\n                return [];\r\n            }\r\n\r\n            var clusterMaxDuration = 30000;\r\n\r\n            var EBML = [{\r\n                'id': 0x1a45dfa3, // EBML\r\n                'data': [{\r\n                    'data': 1,\r\n                    'id': 0x4286 // EBMLVersion\r\n                }, {\r\n                    'data': 1,\r\n                    'id': 0x42f7 // EBMLReadVersion\r\n                }, {\r\n                    'data': 4,\r\n                    'id': 0x42f2 // EBMLMaxIDLength\r\n                }, {\r\n                    'data': 8,\r\n                    'id': 0x42f3 // EBMLMaxSizeLength\r\n                }, {\r\n                    'data': 'webm',\r\n                    'id': 0x4282 // DocType\r\n                }, {\r\n                    'data': 2,\r\n                    'id': 0x4287 // DocTypeVersion\r\n                }, {\r\n                    'data': 2,\r\n                    'id': 0x4285 // DocTypeReadVersion\r\n                }]\r\n            }, {\r\n                'id': 0x18538067, // Segment\r\n                'data': [{\r\n                    'id': 0x1549a966, // Info\r\n                    'data': [{\r\n                        'data': 1e6, //do things in millisecs (num of nanosecs for duration scale)\r\n                        'id': 0x2ad7b1 // TimecodeScale\r\n                    }, {\r\n                        'data': 'whammy',\r\n                        'id': 0x4d80 // MuxingApp\r\n                    }, {\r\n                        'data': 'whammy',\r\n                        'id': 0x5741 // WritingApp\r\n                    }, {\r\n                        'data': doubleToString(info.duration),\r\n                        'id': 0x4489 // Duration\r\n                    }]\r\n                }, {\r\n                    'id': 0x1654ae6b, // Tracks\r\n                    'data': [{\r\n                        'id': 0xae, // TrackEntry\r\n                        'data': [{\r\n                            'data': 1,\r\n                            'id': 0xd7 // TrackNumber\r\n                        }, {\r\n                            'data': 1,\r\n                            'id': 0x73c5 // TrackUID\r\n                        }, {\r\n                            'data': 0,\r\n                            'id': 0x9c // FlagLacing\r\n                        }, {\r\n                            'data': 'und',\r\n                            'id': 0x22b59c // Language\r\n                        }, {\r\n                            'data': 'V_VP8',\r\n                            'id': 0x86 // CodecID\r\n                        }, {\r\n                            'data': 'VP8',\r\n                            'id': 0x258688 // CodecName\r\n                        }, {\r\n                            'data': 1,\r\n                            'id': 0x83 // TrackType\r\n                        }, {\r\n                            'id': 0xe0, // Video\r\n                            'data': [{\r\n                                'data': info.width,\r\n                                'id': 0xb0 // PixelWidth\r\n                            }, {\r\n                                'data': info.height,\r\n                                'id': 0xba // PixelHeight\r\n                            }]\r\n                        }]\r\n                    }]\r\n                }]\r\n            }];\r\n\r\n            //Generate clusters (max duration)\r\n            var frameNumber = 0;\r\n            var clusterTimecode = 0;\r\n            while (frameNumber < frames.length) {\r\n\r\n                var clusterFrames = [];\r\n                var clusterDuration = 0;\r\n                do {\r\n                    clusterFrames.push(frames[frameNumber]);\r\n                    clusterDuration += frames[frameNumber].duration;\r\n                    frameNumber++;\r\n                } while (frameNumber < frames.length && clusterDuration < clusterMaxDuration);\r\n\r\n                var clusterCounter = 0;\r\n                var cluster = {\r\n                    'id': 0x1f43b675, // Cluster\r\n                    'data': getClusterData(clusterTimecode, clusterCounter, clusterFrames)\r\n                }; //Add cluster to segment\r\n                EBML[1].data.push(cluster);\r\n                clusterTimecode += clusterDuration;\r\n            }\r\n\r\n            return generateEBML(EBML);\r\n        }\r\n\r\n        function getClusterData(clusterTimecode, clusterCounter, clusterFrames) {\r\n            return [{\r\n                'data': clusterTimecode,\r\n                'id': 0xe7 // Timecode\r\n            }].concat(clusterFrames.map(function(webp) {\r\n                var block = makeSimpleBlock({\r\n                    discardable: 0,\r\n                    frame: webp.data.slice(4),\r\n                    invisible: 0,\r\n                    keyframe: 1,\r\n                    lacing: 0,\r\n                    trackNum: 1,\r\n                    timecode: Math.round(clusterCounter)\r\n                });\r\n                clusterCounter += webp.duration;\r\n                return {\r\n                    data: block,\r\n                    id: 0xa3\r\n                };\r\n            }));\r\n        }\r\n\r\n        // sums the lengths of all the frames and gets the duration\r\n\r\n        function checkFrames(frames) {\r\n            if (!frames[0]) {\r\n                postMessage({\r\n                    error: 'Something went wrong. Maybe WebP format is not supported in the current browser.'\r\n                });\r\n                return;\r\n            }\r\n\r\n            var width = frames[0].width,\r\n                height = frames[0].height,\r\n                duration = frames[0].duration;\r\n\r\n            for (var i = 1; i < frames.length; i++) {\r\n                duration += frames[i].duration;\r\n            }\r\n            return {\r\n                duration: duration,\r\n                width: width,\r\n                height: height\r\n            };\r\n        }\r\n\r\n        function numToBuffer(num) {\r\n            var parts = [];\r\n            while (num > 0) {\r\n                parts.push(num & 0xff);\r\n                num = num >> 8;\r\n            }\r\n            return new Uint8Array(parts.reverse());\r\n        }\r\n\r\n        function strToBuffer(str) {\r\n            return new Uint8Array(str.split('').map(function(e) {\r\n                return e.charCodeAt(0);\r\n            }));\r\n        }\r\n\r\n        function bitsToBuffer(bits) {\r\n            var data = [];\r\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\r\n            bits = pad + bits;\r\n            for (var i = 0; i < bits.length; i += 8) {\r\n                data.push(parseInt(bits.substr(i, 8), 2));\r\n            }\r\n            return new Uint8Array(data);\r\n        }\r\n\r\n        function generateEBML(json) {\r\n            var ebml = [];\r\n            for (var i = 0; i < json.length; i++) {\r\n                var data = json[i].data;\r\n\r\n                if (typeof data === 'object') {\r\n                    data = generateEBML(data);\r\n                }\r\n\r\n                if (typeof data === 'number') {\r\n                    data = bitsToBuffer(data.toString(2));\r\n                }\r\n\r\n                if (typeof data === 'string') {\r\n                    data = strToBuffer(data);\r\n                }\r\n\r\n                var len = data.size || data.byteLength || data.length;\r\n                var zeroes = Math.ceil(Math.ceil(Math.log(len) / Math.log(2)) / 8);\r\n                var sizeToString = len.toString(2);\r\n                var padded = (new Array((zeroes * 7 + 7 + 1) - sizeToString.length)).join('0') + sizeToString;\r\n                var size = (new Array(zeroes)).join('0') + '1' + padded;\r\n\r\n                ebml.push(numToBuffer(json[i].id));\r\n                ebml.push(bitsToBuffer(size));\r\n                ebml.push(data);\r\n            }\r\n\r\n            return new Blob(ebml, {\r\n                type: 'video/webm'\r\n            });\r\n        }\r\n\r\n        function toBinStrOld(bits) {\r\n            var data = '';\r\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\r\n            bits = pad + bits;\r\n            for (var i = 0; i < bits.length; i += 8) {\r\n                data += String.fromCharCode(parseInt(bits.substr(i, 8), 2));\r\n            }\r\n            return data;\r\n        }\r\n\r\n        function makeSimpleBlock(data) {\r\n            var flags = 0;\r\n\r\n            if (data.keyframe) {\r\n                flags |= 128;\r\n            }\r\n\r\n            if (data.invisible) {\r\n                flags |= 8;\r\n            }\r\n\r\n            if (data.lacing) {\r\n                flags |= (data.lacing << 1);\r\n            }\r\n\r\n            if (data.discardable) {\r\n                flags |= 1;\r\n            }\r\n\r\n            if (data.trackNum > 127) {\r\n                throw 'TrackNumber > 127 not supported';\r\n            }\r\n\r\n            var out = [data.trackNum | 0x80, data.timecode >> 8, data.timecode & 0xff, flags].map(function(e) {\r\n                return String.fromCharCode(e);\r\n            }).join('') + data.frame;\r\n\r\n            return out;\r\n        }\r\n\r\n        function parseWebP(riff) {\r\n            var VP8 = riff.RIFF[0].WEBP[0];\r\n\r\n            var frameStart = VP8.indexOf('\\x9d\\x01\\x2a'); // A VP8 keyframe starts with the 0x9d012a header\r\n            for (var i = 0, c = []; i < 4; i++) {\r\n                c[i] = VP8.charCodeAt(frameStart + 3 + i);\r\n            }\r\n\r\n            var width, height, tmp;\r\n\r\n            //the code below is literally copied verbatim from the bitstream spec\r\n            tmp = (c[1] << 8) | c[0];\r\n            width = tmp & 0x3FFF;\r\n            tmp = (c[3] << 8) | c[2];\r\n            height = tmp & 0x3FFF;\r\n            return {\r\n                width: width,\r\n                height: height,\r\n                data: VP8,\r\n                riff: riff\r\n            };\r\n        }\r\n\r\n        function getStrLength(string, offset) {\r\n            return parseInt(string.substr(offset + 4, 4).split('').map(function(i) {\r\n                var unpadded = i.charCodeAt(0).toString(2);\r\n                return (new Array(8 - unpadded.length + 1)).join('0') + unpadded;\r\n            }).join(''), 2);\r\n        }\r\n\r\n        function parseRIFF(string) {\r\n            var offset = 0;\r\n            var chunks = {};\r\n\r\n            while (offset < string.length) {\r\n                var id = string.substr(offset, 4);\r\n                var len = getStrLength(string, offset);\r\n                var data = string.substr(offset + 4 + 4, len);\r\n                offset += 4 + 4 + len;\r\n                chunks[id] = chunks[id] || [];\r\n\r\n                if (id === 'RIFF' || id === 'LIST') {\r\n                    chunks[id].push(parseRIFF(data));\r\n                } else {\r\n                    chunks[id].push(data);\r\n                }\r\n            }\r\n            return chunks;\r\n        }\r\n\r\n        function doubleToString(num) {\r\n            return [].slice.call(\r\n                new Uint8Array((new Float64Array([num])).buffer), 0).map(function(e) {\r\n                return String.fromCharCode(e);\r\n            }).reverse().join('');\r\n        }\r\n\r\n        var webm = new ArrayToWebM(frames.map(function(frame) {\r\n            var webp = parseWebP(parseRIFF(atob(frame.image.slice(23))));\r\n            webp.duration = frame.duration;\r\n            return webp;\r\n        }));\r\n\r\n        postMessage(webm);\r\n    }\r\n\r\n    /**\r\n     * Encodes frames in WebM container. It uses WebWorkinvoke to invoke 'ArrayToWebM' method.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof Whammy\r\n     * @example\r\n     * recorder = new Whammy().Video(0.8, 100);\r\n     * recorder.compile(function(blob) {\r\n     *    // blob.size - blob.type\r\n     * });\r\n     */\r\n    WhammyVideo.prototype.compile = function(callback) {\r\n        var webWorker = processInWebWorker(whammyInWebWorker);\r\n\r\n        webWorker.onmessage = function(event) {\r\n            if (event.data.error) {\r\n                console.error(event.data.error);\r\n                return;\r\n            }\r\n            callback(event.data);\r\n        };\r\n\r\n        webWorker.postMessage(this.frames);\r\n    };\r\n\r\n    return {\r\n        /**\r\n         * A more abstract-ish API.\r\n         * @method\r\n         * @memberof Whammy\r\n         * @example\r\n         * recorder = new Whammy().Video(0.8, 100);\r\n         * @param {?number} speed - 0.8\r\n         * @param {?number} quality - 100\r\n         */\r\n        Video: WhammyVideo\r\n    };\r\n})();\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.Whammy = Whammy;\r\n}\n\r\n// ______________ (indexed-db)\r\n// DiskStorage.js\r\n\r\n/**\r\n * DiskStorage is a standalone object used by {@link RecordRTC} to store recorded blobs in IndexedDB storage.\r\n * @summary Writing blobs into IndexedDB.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @example\r\n * DiskStorage.Store({\r\n *     audioBlob: yourAudioBlob,\r\n *     videoBlob: yourVideoBlob,\r\n *     gifBlob  : yourGifBlob\r\n * });\r\n * DiskStorage.Fetch(function(dataURL, type) {\r\n *     if(type === 'audioBlob') { }\r\n *     if(type === 'videoBlob') { }\r\n *     if(type === 'gifBlob')   { }\r\n * });\r\n * // DiskStorage.dataStoreName = 'recordRTC';\r\n * // DiskStorage.onError = function(error) { };\r\n * @property {function} init - This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\r\n * @property {function} Fetch - This method fetches stored blobs from IndexedDB.\r\n * @property {function} Store - This method stores blobs in IndexedDB.\r\n * @property {function} onError - This function is invoked for any known/unknown error.\r\n * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\n\r\nvar DiskStorage = {\r\n    /**\r\n     * This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.init();\r\n     */\r\n    init: function() {\r\n        var self = this;\r\n\r\n        if (typeof indexedDB === 'undefined' || typeof indexedDB.open === 'undefined') {\r\n            console.error('IndexedDB API are not available in this browser.');\r\n            return;\r\n        }\r\n\r\n        var dbVersion = 1;\r\n        var dbName = this.dbName || location.href.replace(/\\/|:|#|%|\\.|\\[|\\]/g, ''),\r\n            db;\r\n        var request = indexedDB.open(dbName, dbVersion);\r\n\r\n        function createObjectStore(dataBase) {\r\n            dataBase.createObjectStore(self.dataStoreName);\r\n        }\r\n\r\n        function putInDB() {\r\n            var transaction = db.transaction([self.dataStoreName], 'readwrite');\r\n\r\n            if (self.videoBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.videoBlob, 'videoBlob');\r\n            }\r\n\r\n            if (self.gifBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.gifBlob, 'gifBlob');\r\n            }\r\n\r\n            if (self.audioBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.audioBlob, 'audioBlob');\r\n            }\r\n\r\n            function getFromStore(portionName) {\r\n                transaction.objectStore(self.dataStoreName).get(portionName).onsuccess = function(event) {\r\n                    if (self.callback) {\r\n                        self.callback(event.target.result, portionName);\r\n                    }\r\n                };\r\n            }\r\n\r\n            getFromStore('audioBlob');\r\n            getFromStore('videoBlob');\r\n            getFromStore('gifBlob');\r\n        }\r\n\r\n        request.onerror = self.onError;\r\n\r\n        request.onsuccess = function() {\r\n            db = request.result;\r\n            db.onerror = self.onError;\r\n\r\n            if (db.setVersion) {\r\n                if (db.version !== dbVersion) {\r\n                    var setVersion = db.setVersion(dbVersion);\r\n                    setVersion.onsuccess = function() {\r\n                        createObjectStore(db);\r\n                        putInDB();\r\n                    };\r\n                } else {\r\n                    putInDB();\r\n                }\r\n            } else {\r\n                putInDB();\r\n            }\r\n        };\r\n        request.onupgradeneeded = function(event) {\r\n            createObjectStore(event.target.result);\r\n        };\r\n    },\r\n    /**\r\n     * This method fetches stored blobs from IndexedDB.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.Fetch(function(dataURL, type) {\r\n     *     if(type === 'audioBlob') { }\r\n     *     if(type === 'videoBlob') { }\r\n     *     if(type === 'gifBlob')   { }\r\n     * });\r\n     */\r\n    Fetch: function(callback) {\r\n        this.callback = callback;\r\n        this.init();\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * This method stores blobs in IndexedDB.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.Store({\r\n     *     audioBlob: yourAudioBlob,\r\n     *     videoBlob: yourVideoBlob,\r\n     *     gifBlob  : yourGifBlob\r\n     * });\r\n     */\r\n    Store: function(config) {\r\n        this.audioBlob = config.audioBlob;\r\n        this.videoBlob = config.videoBlob;\r\n        this.gifBlob = config.gifBlob;\r\n\r\n        this.init();\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * This function is invoked for any known/unknown error.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.onError = function(error){\r\n     *     alerot( JSON.stringify(error) );\r\n     * };\r\n     */\r\n    onError: function(error) {\r\n        console.error(JSON.stringify(error, null, '\\t'));\r\n    },\r\n\r\n    /**\r\n     * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.dataStoreName = 'recordRTC';\r\n     */\r\n    dataStoreName: 'recordRTC',\r\n    dbName: null\r\n};\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.DiskStorage = DiskStorage;\r\n}\n\r\n// ______________\r\n// GifRecorder.js\r\n\r\n/**\r\n * GifRecorder is standalone calss used by {@link RecordRTC} to record video or canvas into animated gif.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef GifRecorder\r\n * @class\r\n * @example\r\n * var recorder = new GifRecorder(mediaStream || canvas || context, { onGifPreview: function, onGifRecordingStarted: function, width: 1280, height: 720, frameRate: 200, quality: 10 });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     img.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object or HTMLCanvasElement or CanvasRenderingContext2D.\r\n * @param {object} config - {disableLogs:true, initCallback: function, width: 320, height: 240, frameRate: 200, quality: 10}\r\n */\r\n\r\nfunction GifRecorder(mediaStream, config) {\r\n    if (typeof GIFEncoder === 'undefined') {\r\n        var script = document.createElement('script');\r\n        script.src = 'https://www.webrtc-experiment.com/gif-recorder.js';\r\n        (document.body || document.documentElement).appendChild(script);\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    var isHTMLObject = mediaStream instanceof CanvasRenderingContext2D || mediaStream instanceof HTMLCanvasElement;\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (typeof GIFEncoder === 'undefined') {\r\n            setTimeout(self.record, 1000);\r\n            return;\r\n        }\r\n\r\n        if (!isLoadedMetaData) {\r\n            setTimeout(self.record, 1000);\r\n            return;\r\n        }\r\n\r\n        if (!isHTMLObject) {\r\n            if (!config.width) {\r\n                config.width = video.offsetWidth || 320;\r\n            }\r\n\r\n            if (!config.height) {\r\n                config.height = video.offsetHeight || 240;\r\n            }\r\n\r\n            if (!config.video) {\r\n                config.video = {\r\n                    width: config.width,\r\n                    height: config.height\r\n                };\r\n            }\r\n\r\n            if (!config.canvas) {\r\n                config.canvas = {\r\n                    width: config.width,\r\n                    height: config.height\r\n                };\r\n            }\r\n\r\n            canvas.width = config.canvas.width || 320;\r\n            canvas.height = config.canvas.height || 240;\r\n\r\n            video.width = config.video.width || 320;\r\n            video.height = config.video.height || 240;\r\n        }\r\n\r\n        // external library to record as GIF images\r\n        gifEncoder = new GIFEncoder();\r\n\r\n        // void setRepeat(int iter) \r\n        // Sets the number of times the set of GIF frames should be played. \r\n        // Default is 1; 0 means play indefinitely.\r\n        gifEncoder.setRepeat(0);\r\n\r\n        // void setFrameRate(Number fps) \r\n        // Sets frame rate in frames per second. \r\n        // Equivalent to setDelay(1000/fps).\r\n        // Using \"setDelay\" instead of \"setFrameRate\"\r\n        gifEncoder.setDelay(config.frameRate || 200);\r\n\r\n        // void setQuality(int quality) \r\n        // Sets quality of color quantization (conversion of images to the \r\n        // maximum 256 colors allowed by the GIF specification). \r\n        // Lower values (minimum = 1) produce better colors, \r\n        // but slow processing significantly. 10 is the default, \r\n        // and produces good color mapping at reasonable speeds. \r\n        // Values greater than 20 do not yield significant improvements in speed.\r\n        gifEncoder.setQuality(config.quality || 10);\r\n\r\n        // Boolean start() \r\n        // This writes the GIF Header and returns false if it fails.\r\n        gifEncoder.start();\r\n\r\n        if (typeof config.onGifRecordingStarted === 'function') {\r\n            config.onGifRecordingStarted();\r\n        }\r\n\r\n        startTime = Date.now();\r\n\r\n        function drawVideoFrame(time) {\r\n            if (self.clearedRecordedData === true) {\r\n                return;\r\n            }\r\n\r\n            if (isPausedRecording) {\r\n                return setTimeout(function() {\r\n                    drawVideoFrame(time);\r\n                }, 100);\r\n            }\r\n\r\n            lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\r\n\r\n            if (typeof lastFrameTime === undefined) {\r\n                lastFrameTime = time;\r\n            }\r\n\r\n            // ~10 fps\r\n            if (time - lastFrameTime < 90) {\r\n                return;\r\n            }\r\n\r\n            if (!isHTMLObject && video.paused) {\r\n                // via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\r\n                // Tweak for Android Chrome\r\n                video.play();\r\n            }\r\n\r\n            if (!isHTMLObject) {\r\n                context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n            }\r\n\r\n            if (config.onGifPreview) {\r\n                config.onGifPreview(canvas.toDataURL('image/png'));\r\n            }\r\n\r\n            gifEncoder.addFrame(context);\r\n            lastFrameTime = time;\r\n        }\r\n\r\n        lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     img.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (lastAnimationFrame) {\r\n            cancelAnimationFrame(lastAnimationFrame);\r\n        }\r\n\r\n        endTime = Date.now();\r\n\r\n        /**\r\n         * @property {Blob} blob - The recorded blob object.\r\n         * @memberof GifRecorder\r\n         * @example\r\n         * recorder.stop(function(){\r\n         *     var blob = recorder.blob;\r\n         * });\r\n         */\r\n        this.blob = new Blob([new Uint8Array(gifEncoder.stream().bin)], {\r\n            type: 'image/gif'\r\n        });\r\n\r\n        callback(this.blob);\r\n\r\n        // bug: find a way to clear old recorded blobs\r\n        gifEncoder.stream().bin = [];\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        self.clearedRecordedData = true;\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        if (gifEncoder) {\r\n            gifEncoder.stream().bin = [];\r\n        }\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'GifRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n\r\n    if (isHTMLObject) {\r\n        if (mediaStream instanceof CanvasRenderingContext2D) {\r\n            context = mediaStream;\r\n            canvas = context.canvas;\r\n        } else if (mediaStream instanceof HTMLCanvasElement) {\r\n            context = mediaStream.getContext('2d');\r\n            canvas = mediaStream;\r\n        }\r\n    }\r\n\r\n    var isLoadedMetaData = true;\r\n\r\n    if (!isHTMLObject) {\r\n        var video = document.createElement('video');\r\n        video.muted = true;\r\n        video.autoplay = true;\r\n        video.playsInline = true;\r\n\r\n        isLoadedMetaData = false;\r\n        video.onloadedmetadata = function() {\r\n            isLoadedMetaData = true;\r\n        };\r\n\r\n        setSrcObject(mediaStream, video);\r\n\r\n        video.play();\r\n    }\r\n\r\n    var lastAnimationFrame = null;\r\n    var startTime, endTime, lastFrameTime;\r\n\r\n    var gifEncoder;\r\n\r\n    var self = this;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.GifRecorder = GifRecorder;\r\n}\n\r\n// Last time updated: 2019-06-21 4:09:42 AM UTC\r\n\r\n// ________________________\r\n// MultiStreamsMixer v1.2.2\r\n\r\n// Open-Sourced: https://github.com/muaz-khan/MultiStreamsMixer\r\n\r\n// --------------------------------------------------\r\n// Muaz Khan     - www.MuazKhan.com\r\n// MIT License   - www.WebRTC-Experiment.com/licence\r\n// --------------------------------------------------\r\n\r\nfunction MultiStreamsMixer(arrayOfMediaStreams, elementClass) {\r\n\r\n    var browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\r\n\r\n    (function(that) {\r\n        if (typeof RecordRTC !== 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (!that) {\r\n            return;\r\n        }\r\n\r\n        if (typeof window !== 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (typeof global === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        global.navigator = {\r\n            userAgent: browserFakeUserAgent,\r\n            getUserMedia: function() {}\r\n        };\r\n\r\n        if (!global.console) {\r\n            global.console = {};\r\n        }\r\n\r\n        if (typeof global.console.log === 'undefined' || typeof global.console.error === 'undefined') {\r\n            global.console.error = global.console.log = global.console.log || function() {\r\n                console.log(arguments);\r\n            };\r\n        }\r\n\r\n        if (typeof document === 'undefined') {\r\n            /*global document:true */\r\n            that.document = {\r\n                documentElement: {\r\n                    appendChild: function() {\r\n                        return '';\r\n                    }\r\n                }\r\n            };\r\n\r\n            document.createElement = document.captureStream = document.mozCaptureStream = function() {\r\n                var obj = {\r\n                    getContext: function() {\r\n                        return obj;\r\n                    },\r\n                    play: function() {},\r\n                    pause: function() {},\r\n                    drawImage: function() {},\r\n                    toDataURL: function() {\r\n                        return '';\r\n                    },\r\n                    style: {}\r\n                };\r\n                return obj;\r\n            };\r\n\r\n            that.HTMLVideoElement = function() {};\r\n        }\r\n\r\n        if (typeof location === 'undefined') {\r\n            /*global location:true */\r\n            that.location = {\r\n                protocol: 'file:',\r\n                href: '',\r\n                hash: ''\r\n            };\r\n        }\r\n\r\n        if (typeof screen === 'undefined') {\r\n            /*global screen:true */\r\n            that.screen = {\r\n                width: 0,\r\n                height: 0\r\n            };\r\n        }\r\n\r\n        if (typeof URL === 'undefined') {\r\n            /*global screen:true */\r\n            that.URL = {\r\n                createObjectURL: function() {\r\n                    return '';\r\n                },\r\n                revokeObjectURL: function() {\r\n                    return '';\r\n                }\r\n            };\r\n        }\r\n\r\n        /*global window:true */\r\n        that.window = global;\r\n    })(typeof global !== 'undefined' ? global : null);\r\n\r\n    // requires: chrome://flags/#enable-experimental-web-platform-features\r\n\r\n    elementClass = elementClass || 'multi-streams-mixer';\r\n\r\n    var videos = [];\r\n    var isStopDrawingFrames = false;\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n    canvas.style.opacity = 0;\r\n    canvas.style.position = 'absolute';\r\n    canvas.style.zIndex = -1;\r\n    canvas.style.top = '-1000em';\r\n    canvas.style.left = '-1000em';\r\n    canvas.className = elementClass;\r\n    (document.body || document.documentElement).appendChild(canvas);\r\n\r\n    this.disableLogs = false;\r\n    this.frameInterval = 10;\r\n\r\n    this.width = 360;\r\n    this.height = 240;\r\n\r\n    // use gain node to prevent echo\r\n    this.useGainNode = true;\r\n\r\n    var self = this;\r\n\r\n    // _____________________________\r\n    // Cross-Browser-Declarations.js\r\n\r\n    // WebAudio API representer\r\n    var AudioContext = window.AudioContext;\r\n\r\n    if (typeof AudioContext === 'undefined') {\r\n        if (typeof webkitAudioContext !== 'undefined') {\r\n            /*global AudioContext:true */\r\n            AudioContext = webkitAudioContext;\r\n        }\r\n\r\n        if (typeof mozAudioContext !== 'undefined') {\r\n            /*global AudioContext:true */\r\n            AudioContext = mozAudioContext;\r\n        }\r\n    }\r\n\r\n    /*jshint -W079 */\r\n    var URL = window.URL;\r\n\r\n    if (typeof URL === 'undefined' && typeof webkitURL !== 'undefined') {\r\n        /*global URL:true */\r\n        URL = webkitURL;\r\n    }\r\n\r\n    if (typeof navigator !== 'undefined' && typeof navigator.getUserMedia === 'undefined') { // maybe window.navigator?\r\n        if (typeof navigator.webkitGetUserMedia !== 'undefined') {\r\n            navigator.getUserMedia = navigator.webkitGetUserMedia;\r\n        }\r\n\r\n        if (typeof navigator.mozGetUserMedia !== 'undefined') {\r\n            navigator.getUserMedia = navigator.mozGetUserMedia;\r\n        }\r\n    }\r\n\r\n    var MediaStream = window.MediaStream;\r\n\r\n    if (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n        MediaStream = webkitMediaStream;\r\n    }\r\n\r\n    /*global MediaStream:true */\r\n    if (typeof MediaStream !== 'undefined') {\r\n        // override \"stop\" method for all browsers\r\n        if (typeof MediaStream.prototype.stop === 'undefined') {\r\n            MediaStream.prototype.stop = function() {\r\n                this.getTracks().forEach(function(track) {\r\n                    track.stop();\r\n                });\r\n            };\r\n        }\r\n    }\r\n\r\n    var Storage = {};\r\n\r\n    if (typeof AudioContext !== 'undefined') {\r\n        Storage.AudioContext = AudioContext;\r\n    } else if (typeof webkitAudioContext !== 'undefined') {\r\n        Storage.AudioContext = webkitAudioContext;\r\n    }\r\n\r\n    function setSrcObject(stream, element) {\r\n        if ('srcObject' in element) {\r\n            element.srcObject = stream;\r\n        } else if ('mozSrcObject' in element) {\r\n            element.mozSrcObject = stream;\r\n        } else {\r\n            element.srcObject = stream;\r\n        }\r\n    }\r\n\r\n    this.startDrawingFrames = function() {\r\n        drawVideosToCanvas();\r\n    };\r\n\r\n    function drawVideosToCanvas() {\r\n        if (isStopDrawingFrames) {\r\n            return;\r\n        }\r\n\r\n        var videosLength = videos.length;\r\n\r\n        var fullcanvas = false;\r\n        var remaining = [];\r\n        videos.forEach(function(video) {\r\n            if (!video.stream) {\r\n                video.stream = {};\r\n            }\r\n\r\n            if (video.stream.fullcanvas) {\r\n                fullcanvas = video;\r\n            } else {\r\n                // todo: video.stream.active or video.stream.live to fix blank frames issues?\r\n                remaining.push(video);\r\n            }\r\n        });\r\n\r\n        if (fullcanvas) {\r\n            canvas.width = fullcanvas.stream.width;\r\n            canvas.height = fullcanvas.stream.height;\r\n        } else if (remaining.length) {\r\n            canvas.width = videosLength > 1 ? remaining[0].width * 2 : remaining[0].width;\r\n\r\n            var height = 1;\r\n            if (videosLength === 3 || videosLength === 4) {\r\n                height = 2;\r\n            }\r\n            if (videosLength === 5 || videosLength === 6) {\r\n                height = 3;\r\n            }\r\n            if (videosLength === 7 || videosLength === 8) {\r\n                height = 4;\r\n            }\r\n            if (videosLength === 9 || videosLength === 10) {\r\n                height = 5;\r\n            }\r\n            canvas.height = remaining[0].height * height;\r\n        } else {\r\n            canvas.width = self.width || 360;\r\n            canvas.height = self.height || 240;\r\n        }\r\n\r\n        if (fullcanvas && fullcanvas instanceof HTMLVideoElement) {\r\n            drawImage(fullcanvas);\r\n        }\r\n\r\n        remaining.forEach(function(video, idx) {\r\n            drawImage(video, idx);\r\n        });\r\n\r\n        setTimeout(drawVideosToCanvas, self.frameInterval);\r\n    }\r\n\r\n    function drawImage(video, idx) {\r\n        if (isStopDrawingFrames) {\r\n            return;\r\n        }\r\n\r\n        var x = 0;\r\n        var y = 0;\r\n        var width = video.width;\r\n        var height = video.height;\r\n\r\n        if (idx === 1) {\r\n            x = video.width;\r\n        }\r\n\r\n        if (idx === 2) {\r\n            y = video.height;\r\n        }\r\n\r\n        if (idx === 3) {\r\n            x = video.width;\r\n            y = video.height;\r\n        }\r\n\r\n        if (idx === 4) {\r\n            y = video.height * 2;\r\n        }\r\n\r\n        if (idx === 5) {\r\n            x = video.width;\r\n            y = video.height * 2;\r\n        }\r\n\r\n        if (idx === 6) {\r\n            y = video.height * 3;\r\n        }\r\n\r\n        if (idx === 7) {\r\n            x = video.width;\r\n            y = video.height * 3;\r\n        }\r\n\r\n        if (typeof video.stream.left !== 'undefined') {\r\n            x = video.stream.left;\r\n        }\r\n\r\n        if (typeof video.stream.top !== 'undefined') {\r\n            y = video.stream.top;\r\n        }\r\n\r\n        if (typeof video.stream.width !== 'undefined') {\r\n            width = video.stream.width;\r\n        }\r\n\r\n        if (typeof video.stream.height !== 'undefined') {\r\n            height = video.stream.height;\r\n        }\r\n\r\n        context.drawImage(video, x, y, width, height);\r\n\r\n        if (typeof video.stream.onRender === 'function') {\r\n            video.stream.onRender(context, x, y, width, height, idx);\r\n        }\r\n    }\r\n\r\n    function getMixedStream() {\r\n        isStopDrawingFrames = false;\r\n        var mixedVideoStream = getMixedVideoStream();\r\n\r\n        var mixedAudioStream = getMixedAudioStream();\r\n        if (mixedAudioStream) {\r\n            mixedAudioStream.getTracks().filter(function(t) {\r\n                return t.kind === 'audio';\r\n            }).forEach(function(track) {\r\n                mixedVideoStream.addTrack(track);\r\n            });\r\n        }\r\n\r\n        var fullcanvas;\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            if (stream.fullcanvas) {\r\n                fullcanvas = true;\r\n            }\r\n        });\r\n\r\n        // mixedVideoStream.prototype.appendStreams = appendStreams;\r\n        // mixedVideoStream.prototype.resetVideoStreams = resetVideoStreams;\r\n        // mixedVideoStream.prototype.clearRecordedData = clearRecordedData;\r\n\r\n        return mixedVideoStream;\r\n    }\r\n\r\n    function getMixedVideoStream() {\r\n        resetVideoStreams();\r\n\r\n        var capturedStream;\r\n\r\n        if ('captureStream' in canvas) {\r\n            capturedStream = canvas.captureStream();\r\n        } else if ('mozCaptureStream' in canvas) {\r\n            capturedStream = canvas.mozCaptureStream();\r\n        } else if (!self.disableLogs) {\r\n            console.error('Upgrade to latest Chrome or otherwise enable this flag: chrome://flags/#enable-experimental-web-platform-features');\r\n        }\r\n\r\n        var videoStream = new MediaStream();\r\n\r\n        capturedStream.getTracks().filter(function(t) {\r\n            return t.kind === 'video';\r\n        }).forEach(function(track) {\r\n            videoStream.addTrack(track);\r\n        });\r\n\r\n        canvas.stream = videoStream;\r\n\r\n        return videoStream;\r\n    }\r\n\r\n    function getMixedAudioStream() {\r\n        // via: @pehrsons\r\n        if (!Storage.AudioContextConstructor) {\r\n            Storage.AudioContextConstructor = new Storage.AudioContext();\r\n        }\r\n\r\n        self.audioContext = Storage.AudioContextConstructor;\r\n\r\n        self.audioSources = [];\r\n\r\n        if (self.useGainNode === true) {\r\n            self.gainNode = self.audioContext.createGain();\r\n            self.gainNode.connect(self.audioContext.destination);\r\n            self.gainNode.gain.value = 0; // don't hear self\r\n        }\r\n\r\n        var audioTracksLength = 0;\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            if (!stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'audio';\r\n                }).length) {\r\n                return;\r\n            }\r\n\r\n            audioTracksLength++;\r\n\r\n            var audioSource = self.audioContext.createMediaStreamSource(stream);\r\n\r\n            if (self.useGainNode === true) {\r\n                audioSource.connect(self.gainNode);\r\n            }\r\n\r\n            self.audioSources.push(audioSource);\r\n        });\r\n\r\n        if (!audioTracksLength) {\r\n            // because \"self.audioContext\" is not initialized\r\n            // that's why we've to ignore rest of the code\r\n            return;\r\n        }\r\n\r\n        self.audioDestination = self.audioContext.createMediaStreamDestination();\r\n        self.audioSources.forEach(function(audioSource) {\r\n            audioSource.connect(self.audioDestination);\r\n        });\r\n        return self.audioDestination.stream;\r\n    }\r\n\r\n    function getVideo(stream) {\r\n        var video = document.createElement('video');\r\n\r\n        setSrcObject(stream, video);\r\n\r\n        video.className = elementClass;\r\n\r\n        video.muted = true;\r\n        video.volume = 0;\r\n\r\n        video.width = stream.width || self.width || 360;\r\n        video.height = stream.height || self.height || 240;\r\n\r\n        video.play();\r\n\r\n        return video;\r\n    }\r\n\r\n    this.appendStreams = function(streams) {\r\n        if (!streams) {\r\n            throw 'First parameter is required.';\r\n        }\r\n\r\n        if (!(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        streams.forEach(function(stream) {\r\n            var newStream = new MediaStream();\r\n\r\n            if (stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'video';\r\n                }).length) {\r\n                var video = getVideo(stream);\r\n                video.stream = stream;\r\n                videos.push(video);\r\n\r\n                newStream.addTrack(stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'video';\r\n                })[0]);\r\n            }\r\n\r\n            if (stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'audio';\r\n                }).length) {\r\n                var audioSource = self.audioContext.createMediaStreamSource(stream);\r\n                self.audioDestination = self.audioContext.createMediaStreamDestination();\r\n                audioSource.connect(self.audioDestination);\r\n\r\n                newStream.addTrack(self.audioDestination.stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'audio';\r\n                })[0]);\r\n            }\r\n\r\n            arrayOfMediaStreams.push(newStream);\r\n        });\r\n    };\r\n\r\n    this.releaseStreams = function() {\r\n        videos = [];\r\n        isStopDrawingFrames = true;\r\n\r\n        if (self.gainNode) {\r\n            self.gainNode.disconnect();\r\n            self.gainNode = null;\r\n        }\r\n\r\n        if (self.audioSources.length) {\r\n            self.audioSources.forEach(function(source) {\r\n                source.disconnect();\r\n            });\r\n            self.audioSources = [];\r\n        }\r\n\r\n        if (self.audioDestination) {\r\n            self.audioDestination.disconnect();\r\n            self.audioDestination = null;\r\n        }\r\n\r\n        if (self.audioContext) {\r\n            self.audioContext.close();\r\n        }\r\n\r\n        self.audioContext = null;\r\n\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        if (canvas.stream) {\r\n            canvas.stream.stop();\r\n            canvas.stream = null;\r\n        }\r\n    };\r\n\r\n    this.resetVideoStreams = function(streams) {\r\n        if (streams && !(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        resetVideoStreams(streams);\r\n    };\r\n\r\n    function resetVideoStreams(streams) {\r\n        videos = [];\r\n        streams = streams || arrayOfMediaStreams;\r\n\r\n        // via: @adrian-ber\r\n        streams.forEach(function(stream) {\r\n            if (!stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'video';\r\n                }).length) {\r\n                return;\r\n            }\r\n\r\n            var video = getVideo(stream);\r\n            video.stream = stream;\r\n            videos.push(video);\r\n        });\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'MultiStreamsMixer';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    this.getMixedStream = getMixedStream;\r\n\r\n}\r\n\r\nif (typeof RecordRTC === 'undefined') {\r\n    if (typeof module !== 'undefined' /* && !!module.exports*/ ) {\r\n        module.exports = MultiStreamsMixer;\r\n    }\r\n\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('MultiStreamsMixer', [], function() {\r\n            return MultiStreamsMixer;\r\n        });\r\n    }\r\n}\n\r\n// ______________________\r\n// MultiStreamRecorder.js\r\n\r\n/*\r\n * Video conference recording, using captureStream API along with WebAudio and Canvas2D API.\r\n */\r\n\r\n/**\r\n * MultiStreamRecorder can record multiple videos in single container.\r\n * @summary Multi-videos recorder.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef MultiStreamRecorder\r\n * @class\r\n * @example\r\n * var options = {\r\n *     mimeType: 'video/webm'\r\n * }\r\n * var recorder = new MultiStreamRecorder(ArrayOfMediaStreams, options);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n *\r\n *     // or\r\n *     var blob = recorder.blob;\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStreams} mediaStreams - Array of MediaStreams.\r\n * @param {object} config - {disableLogs:true, frameInterval: 1, mimeType: \"video/webm\"}\r\n */\r\n\r\nfunction MultiStreamRecorder(arrayOfMediaStreams, options) {\r\n    arrayOfMediaStreams = arrayOfMediaStreams || [];\r\n    var self = this;\r\n\r\n    var mixer;\r\n    var mediaRecorder;\r\n\r\n    options = options || {\r\n        elementClass: 'multi-streams-mixer',\r\n        mimeType: 'video/webm',\r\n        video: {\r\n            width: 360,\r\n            height: 240\r\n        }\r\n    };\r\n\r\n    if (!options.frameInterval) {\r\n        options.frameInterval = 10;\r\n    }\r\n\r\n    if (!options.video) {\r\n        options.video = {};\r\n    }\r\n\r\n    if (!options.video.width) {\r\n        options.video.width = 360;\r\n    }\r\n\r\n    if (!options.video.height) {\r\n        options.video.height = 240;\r\n    }\r\n\r\n    /**\r\n     * This method records all MediaStreams.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        // github/muaz-khan/MultiStreamsMixer\r\n        mixer = new MultiStreamsMixer(arrayOfMediaStreams, options.elementClass || 'multi-streams-mixer');\r\n\r\n        if (getAllVideoTracks().length) {\r\n            mixer.frameInterval = options.frameInterval || 10;\r\n            mixer.width = options.video.width || 360;\r\n            mixer.height = options.video.height || 240;\r\n            mixer.startDrawingFrames();\r\n        }\r\n\r\n        if (options.previewStream && typeof options.previewStream === 'function') {\r\n            options.previewStream(mixer.getMixedStream());\r\n        }\r\n\r\n        // record using MediaRecorder API\r\n        mediaRecorder = new MediaStreamRecorder(mixer.getMixedStream(), options);\r\n        mediaRecorder.record();\r\n    };\r\n\r\n    function getAllVideoTracks() {\r\n        var tracks = [];\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            getTracks(stream, 'video').forEach(function(track) {\r\n                tracks.push(track);\r\n            });\r\n        });\r\n        return tracks;\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        mediaRecorder.stop(function(blob) {\r\n            self.blob = blob;\r\n\r\n            callback(blob);\r\n\r\n            self.clearRecordedData();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.pause();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.resume();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.clearRecordedData();\r\n            mediaRecorder = null;\r\n        }\r\n\r\n        if (mixer) {\r\n            mixer.releaseStreams();\r\n            mixer = null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Add extra media-streams to existing recordings.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @param {MediaStreams} mediaStreams - Array of MediaStreams\r\n     * @example\r\n     * recorder.addStreams([newAudioStream, newVideoStream]);\r\n     */\r\n    this.addStreams = function(streams) {\r\n        if (!streams) {\r\n            throw 'First parameter is required.';\r\n        }\r\n\r\n        if (!(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        arrayOfMediaStreams.concat(streams);\r\n\r\n        if (!mediaRecorder || !mixer) {\r\n            return;\r\n        }\r\n\r\n        mixer.appendStreams(streams);\r\n\r\n        if (options.previewStream && typeof options.previewStream === 'function') {\r\n            options.previewStream(mixer.getMixedStream());\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Reset videos during live recording. Replace old videos e.g. replace cameras with full-screen.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @param {MediaStreams} mediaStreams - Array of MediaStreams\r\n     * @example\r\n     * recorder.resetVideoStreams([newVideo1, newVideo2]);\r\n     */\r\n    this.resetVideoStreams = function(streams) {\r\n        if (!mixer) {\r\n            return;\r\n        }\r\n\r\n        if (streams && !(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        mixer.resetVideoStreams(streams);\r\n    };\r\n\r\n    /**\r\n     * Returns MultiStreamsMixer\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * let mixer = recorder.getMixer();\r\n     * mixer.appendStreams([newStream]);\r\n     */\r\n    this.getMixer = function() {\r\n        return mixer;\r\n    };\r\n\r\n    // for debugging\r\n    this.name = 'MultiStreamRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MultiStreamRecorder = MultiStreamRecorder;\r\n}\n\r\n// _____________________\r\n// RecordRTC.promises.js\r\n\r\n/**\r\n * RecordRTCPromisesHandler adds promises support in {@link RecordRTC}. Try a {@link https://github.com/muaz-khan/RecordRTC/blob/master/simple-demos/RecordRTCPromisesHandler.html|demo here}\r\n * @summary Promises for {@link RecordRTC}\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTCPromisesHandler\r\n * @class\r\n * @example\r\n * var recorder = new RecordRTCPromisesHandler(mediaStream, options);\r\n * recorder.startRecording()\r\n *         .then(successCB)\r\n *         .catch(errorCB);\r\n * // Note: You can access all RecordRTC API using \"recorder.recordRTC\" e.g. \r\n * recorder.recordRTC.onStateChanged = function(state) {};\r\n * recorder.recordRTC.setRecordingDuration(5000);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\r\n * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\r\n * @throws Will throw an error if \"new\" keyword is not used to initiate \"RecordRTCPromisesHandler\". Also throws error if first argument \"MediaStream\" is missing.\r\n * @requires {@link RecordRTC}\r\n */\r\n\r\nfunction RecordRTCPromisesHandler(mediaStream, options) {\r\n    if (!this) {\r\n        throw 'Use \"new RecordRTCPromisesHandler()\"';\r\n    }\r\n\r\n    if (typeof mediaStream === 'undefined') {\r\n        throw 'First argument \"MediaStream\" is required.';\r\n    }\r\n\r\n    var self = this;\r\n\r\n    /**\r\n     * @property {Blob} blob - Access/reach the native {@link RecordRTC} object.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * let internal = recorder.recordRTC.getInternalRecorder();\r\n     * alert(internal instanceof MediaStreamRecorder);\r\n     * recorder.recordRTC.onStateChanged = function(state) {};\r\n     */\r\n    self.recordRTC = new RecordRTC(mediaStream, options);\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.startRecording()\r\n     *         .then(successCB)\r\n     *         .catch(errorCB);\r\n     */\r\n    this.startRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.startRecording();\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method stops the recording.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     var blob = recorder.getBlob();\r\n     * }).catch(errorCB);\r\n     */\r\n    this.stopRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.stopRecording(function(url) {\r\n                    self.blob = self.recordRTC.getBlob();\r\n\r\n                    if (!self.blob || !self.blob.size) {\r\n                        reject('Empty blob.', self.blob);\r\n                        return;\r\n                    }\r\n\r\n                    resolve(url);\r\n                });\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method pauses the recording. You can resume recording using \"resumeRecording\" method.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.pauseRecording()\r\n     *         .then(successCB)\r\n     *         .catch(errorCB);\r\n     */\r\n    this.pauseRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.pauseRecording();\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.resumeRecording()\r\n     *         .then(successCB)\r\n     *         .catch(errorCB);\r\n     */\r\n    this.resumeRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.resumeRecording();\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method returns data-url for the recorded blob.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     recorder.getDataURL().then(function(dataURL) {\r\n     *         window.open(dataURL);\r\n     *     }).catch(errorCB);;\r\n     * }).catch(errorCB);\r\n     */\r\n    this.getDataURL = function(callback) {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.getDataURL(function(dataURL) {\r\n                    resolve(dataURL);\r\n                });\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method returns the recorded blob.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     recorder.getBlob().then(function(blob) {})\r\n     * }).catch(errorCB);\r\n     */\r\n    this.getBlob = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.getBlob());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method returns the internal recording object.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * let internalRecorder = await recorder.getInternalRecorder();\r\n     * if(internalRecorder instanceof MultiStreamRecorder) {\r\n     *     internalRecorder.addStreams([newAudioStream]);\r\n     *     internalRecorder.resetVideoStreams([screenStream]);\r\n     * }\r\n     * @returns {Object} \r\n     */\r\n    this.getInternalRecorder = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.getInternalRecorder());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method resets the recorder. So that you can reuse single recorder instance many times.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * await recorder.reset();\r\n     * recorder.startRecording(); // record again\r\n     */\r\n    this.reset = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.reset());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Destroy RecordRTC instance. Clear all recorders and objects.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.destroy().then(successCB).catch(errorCB);\r\n     */\r\n    this.destroy = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.destroy());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Get recorder's readonly state.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * let state = await recorder.getState();\r\n     * // or\r\n     * recorder.getState().then(state => { console.log(state); })\r\n     * @returns {String} Returns recording state.\r\n     */\r\n    this.getState = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.getState());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @property {Blob} blob - Recorded data as \"Blob\" object.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * await recorder.stopRecording();\r\n     * let blob = recorder.getBlob(); // or \"recorder.recordRTC.blob\"\r\n     * invokeSaveAsDialog(blob);\r\n     */\r\n    this.blob = null;\r\n\r\n    /**\r\n     * RecordRTC version number\r\n     * @property {String} version - Release version number.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @static\r\n     * @readonly\r\n     * @example\r\n     * alert(recorder.version);\r\n     */\r\n    this.version = '5.6.2';\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.RecordRTCPromisesHandler = RecordRTCPromisesHandler;\r\n}\n\r\n// ______________________\r\n// WebAssemblyRecorder.js\r\n\r\n/**\r\n * WebAssemblyRecorder lets you create webm videos in JavaScript via WebAssembly. The library consumes raw RGBA32 buffers (4 bytes per pixel) and turns them into a webm video with the given framerate and quality. This makes it compatible out-of-the-box with ImageData from a CANVAS. With realtime mode you can also use webm-wasm for streaming webm videos.\r\n * @summary Video recording feature in Chrome, Firefox and maybe Edge.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef WebAssemblyRecorder\r\n * @class\r\n * @example\r\n * var recorder = new WebAssemblyRecorder(mediaStream);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {webAssemblyPath:'webm-wasm.wasm',workerPath: 'webm-worker.js', frameRate: 30, width: 1920, height: 1080, bitrate: 1024, realtime: true}\r\n */\r\nfunction WebAssemblyRecorder(stream, config) {\r\n    // based on: github.com/GoogleChromeLabs/webm-wasm\r\n\r\n    if (typeof ReadableStream === 'undefined' || typeof WritableStream === 'undefined') {\r\n        // because it fixes readable/writable streams issues\r\n        console.error('Following polyfill is strongly recommended: https://unpkg.com/@mattiasbuelens/web-streams-polyfill/dist/polyfill.min.js');\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    config.width = config.width || 640;\r\n    config.height = config.height || 480;\r\n    config.frameRate = config.frameRate || 30;\r\n    config.bitrate = config.bitrate || 1200;\r\n    config.realtime = config.realtime || true;\r\n\r\n    function createBufferURL(buffer, type) {\r\n        return URL.createObjectURL(new Blob([buffer], {\r\n            type: type || ''\r\n        }));\r\n    }\r\n\r\n    var finished;\r\n\r\n    function cameraStream() {\r\n        return new ReadableStream({\r\n            start: function(controller) {\r\n                var cvs = document.createElement('canvas');\r\n                var video = document.createElement('video');\r\n                var first = true;\r\n                video.srcObject = stream;\r\n                video.muted = true;\r\n                video.height = config.height;\r\n                video.width = config.width;\r\n                video.volume = 0;\r\n                video.onplaying = function() {\r\n                    cvs.width = config.width;\r\n                    cvs.height = config.height;\r\n                    var ctx = cvs.getContext('2d');\r\n                    var frameTimeout = 1000 / config.frameRate;\r\n                    var cameraTimer = setInterval(function f() {\r\n                        if (finished) {\r\n                            clearInterval(cameraTimer);\r\n                            controller.close();\r\n                        }\r\n\r\n                        if (first) {\r\n                            first = false;\r\n                            if (config.onVideoProcessStarted) {\r\n                                config.onVideoProcessStarted();\r\n                            }\r\n                        }\r\n\r\n                        ctx.drawImage(video, 0, 0);\r\n                        if (controller._controlledReadableStream.state !== 'closed') {\r\n                            try {\r\n                                controller.enqueue(\r\n                                    ctx.getImageData(0, 0, config.width, config.height)\r\n                                );\r\n                            } catch (e) {}\r\n                        }\r\n                    }, frameTimeout);\r\n                };\r\n                video.play();\r\n            }\r\n        });\r\n    }\r\n\r\n    var worker;\r\n\r\n    function startRecording(stream, buffer) {\r\n        if (!config.workerPath && !buffer) {\r\n            finished = false;\r\n\r\n            // is it safe to use @latest ?\r\n\r\n            fetch(\r\n                'https://unpkg.com/webm-wasm@latest/dist/webm-worker.js'\r\n            ).then(function(r) {\r\n                r.arrayBuffer().then(function(buffer) {\r\n                    startRecording(stream, buffer);\r\n                });\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!config.workerPath && buffer instanceof ArrayBuffer) {\r\n            var blob = new Blob([buffer], {\r\n                type: 'text/javascript'\r\n            });\r\n            config.workerPath = URL.createObjectURL(blob);\r\n        }\r\n\r\n        if (!config.workerPath) {\r\n            console.error('workerPath parameter is missing.');\r\n        }\r\n\r\n        worker = new Worker(config.workerPath);\r\n\r\n        worker.postMessage(config.webAssemblyPath || 'https://unpkg.com/webm-wasm@latest/dist/webm-wasm.wasm');\r\n        worker.addEventListener('message', function(event) {\r\n            if (event.data === 'READY') {\r\n                worker.postMessage({\r\n                    width: config.width,\r\n                    height: config.height,\r\n                    bitrate: config.bitrate || 1200,\r\n                    timebaseDen: config.frameRate || 30,\r\n                    realtime: config.realtime\r\n                });\r\n\r\n                cameraStream().pipeTo(new WritableStream({\r\n                    write: function(image) {\r\n                        if (finished) {\r\n                            console.error('Got image, but recorder is finished!');\r\n                            return;\r\n                        }\r\n\r\n                        worker.postMessage(image.data.buffer, [image.data.buffer]);\r\n                    }\r\n                }));\r\n            } else if (!!event.data) {\r\n                if (!isPaused) {\r\n                    arrayOfBuffers.push(event.data);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method records video.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        arrayOfBuffers = [];\r\n        isPaused = false;\r\n        this.blob = null;\r\n        startRecording(stream);\r\n\r\n        if (typeof config.initCallback === 'function') {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    var isPaused;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPaused = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPaused = false;\r\n    };\r\n\r\n    function terminate(callback) {\r\n        if (!worker) {\r\n            if (callback) {\r\n                callback();\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        // Wait for null event data to indicate that the encoding is complete\r\n        worker.addEventListener('message', function(event) {\r\n            if (event.data === null) {\r\n                worker.terminate();\r\n                worker = null;\r\n\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n            }\r\n        });\r\n\r\n        worker.postMessage(null);\r\n    }\r\n\r\n    var arrayOfBuffers = [];\r\n\r\n    /**\r\n     * This method stops recording video.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        finished = true;\r\n\r\n        var recorder = this;\r\n\r\n        terminate(function() {\r\n            recorder.blob = new Blob(arrayOfBuffers, {\r\n                type: 'video/webm'\r\n            });\r\n\r\n            callback(recorder.blob);\r\n        });\r\n    };\r\n\r\n    // for debugging\r\n    this.name = 'WebAssemblyRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        arrayOfBuffers = [];\r\n        isPaused = false;\r\n        this.blob = null;\r\n\r\n        // todo: if recording-ON then STOP it first\r\n    };\r\n\r\n    /**\r\n     * @property {Blob} blob - The recorded blob object.\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.stop(function(){\r\n     *     var blob = recorder.blob;\r\n     * });\r\n     */\r\n    this.blob = null;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.WebAssemblyRecorder = WebAssemblyRecorder;\r\n}\n"],"names":["RecordRTC","mediaStream","config","type","RecordRTCConfiguration","self","startRecording","config2","disableLogs","console","log","version","mediaRecorder","clearRecordedData","record","setState","recordingDuration","handleRecordingDuration","initRecorder","initCallback","Recorder","GetRecorderType","constructor","name","stopRecording","callback","warningLog","state","resumeRecording","setTimeout","warn","stop","_callback","__blob","call","Object","keys","forEach","key","blob","bytesToSize","size","url","URL","createObjectURL","e","autoWriteToDisk","getDataURL","dataURL","parameter","DiskStorage","Store","pauseRecording","pause","resume","readFile","_blob","postMessage","FileReaderSync","readAsDataURL","_mediaRecorder","Worker","navigator","mozGetUserMedia","webWorker","processInWebWorker","onmessage","event","data","reader","FileReader","onload","target","result","_function","Blob","toString","worker","revokeObjectURL","counter","onRecordingStopped","onStateChanged","WARNING","returnObject","setRecordingDuration","getBlob","toURL","getInternalRecorder","save","fileName","invokeSaveAsDialog","getFromDisk","setAdvertisementArray","arrayOfWebPImages","advertisement","length","i","push","duration","image","bufferSize","sampleRate","buffer","reset","getState","destroy","disableLogsCache","Storage","AudioContextConstructor","close","prop","module","exports","define","amd","Fetch","_type","replace","writeToDisk","options","audio","video","gif","audioDataURL","videoDataURL","gifDataURL","audioBlob","videoBlob","gifBlob","recorderType","WhammyRecorder","CanvasRecorder","WebAssemblyRecorder","GifRecorder","StereoAudioRecorder","MediaStreamRecorder","getTracks","MediaRecorder","prototype","mimeType","split","bitsPerSecond","recorder","isChrome","isEdge","isOpera","ReadableStream","isMediaRecorderCompatible","isTypeSupported","Array","MultiStreamRecorder","isSafari","MRecordRTC","addStream","_mediaStream","mediaType","audioRecorder","numberOfAudioChannels","timeSlice","onTimeStamp","newStream","videoTrack","isFirefox","MediaStream","addTrack","videoRecorder","canvas","frameInterval","workerPath","webAssemblyPath","frameRate","bitrate","isSingleRecorder","gifRecorder","quality","blobURL","output","_audioDataURL","_videoDataURL","callback00","webkitURL","args","browserFakeUserAgent","that","window","global","userAgent","getUserMedia","error","arguments","document","documentElement","appendChild","createElement","captureStream","mozCaptureStream","obj","getContext","play","drawImage","toDataURL","style","HTMLVideoElement","location","protocol","href","hash","screen","width","height","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","lastTime","element","currTime","Date","getTime","timeToCall","Math","max","id","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","AudioContext","webkitAudioContext","mozAudioContext","webkitGetUserMedia","indexOf","msSaveBlob","msSaveOrOpenBlob","opera","toLowerCase","test","isElectron","webkitMediaStream","track","bytes","k","sizes","parseInt","floor","pow","toPrecision","file","fileExtension","splitted","fileFullName","round","random","hyperlink","download","body","click","dispatchEvent","MouseEvent","view","bubbles","cancelable","process","versions","electron","stream","kind","filter","t","setSrcObject","srcObject","mozSrcObject","getSeekableBlob","inputBlob","EBML","Error","Reader","decoder","Decoder","tools","fileReader","ebmlElms","decode","read","refinedMetadataBuf","makeMetadataSeekable","metadatas","cues","slice","metadataSize","newBlob","readAsArrayBuffer","nVer","appVersion","nAgt","fullVersion","parseFloat","majorVersion","nameOffset","verOffset","ix","substring","isNaN","arrayOfBlobs","getArrayOfBlobs","timestamps","allStates","recorderHints","canRecordMimeType","ondataavailable","updateTimeStamp","getNativeBlob","getMimeType","recordingCallback","onstart","onpause","onresume","onstop","onerror","looper","manuallyStopped","timeslice","start","secondObject","clearRecordedDataCB","isMediaStreamActive","active","ended","getAllStates","checkForInactiveTracks","leftchannel","rightchannel","recording","recordingLength","jsAudioNode","desiredSampRate","leftChannel","resetVariables","isAudioProcessStarted","isPaused","mergeLeftRightBuffers","mergeAudioBuffers","cb","leftBuffers","rightBuffers","internalInterleavedLength","mergeBuffers","interpolateArray","newSampleRate","oldSampleRate","fitCount","newData","springFactor","Number","tmp","before","toFixed","after","ceil","atPoint","linearInterpolate","channelBuffer","rLength","Float64Array","offset","lng","set","interleave","rightChannel","inputIndex","index","writeUTFBytes","string","setUint8","charCodeAt","interleaved","interleavedLength","resultingBufferLength","ArrayBuffer","DataView","setUint32","setUint16","volume","setInt16","noWorker","workerURL","terminate","byteLength","context","audioInput","createMediaStreamSource","legalBufferValues","JSON","stringify","createJavaScriptNode","createScriptProcessor","connect","intervalsBasedBuffers","left","right","onaudioprocess","disconnect","onAudioProcessDataAvailable","onAudioProcessStarted","inputBuffer","getChannelData","chLeft","Float32Array","chRight","createMediaStreamDestination","destination","htmlElement","html2canvas","isCanvasSupportsStreamCapturing","item","_isChrome","webkitRTCPeerConnection","chrome","chromeVersion","matchArray","match","useWhammyRecorder","globalCanvas","mediaStreamRecorder","HTMLCanvasElement","CanvasRenderingContext2D","isRecording","canvasMediaStream","webkitCaptureStream","mdStream","whammy","frames","drawCanvasFrame","getWebPImages","nodeName","framesLength","frame","idx","framesRemaining","onEncodingCallback","webp","compile","isPausedRecording","cloneCanvas","newCanvas","grabMouse","showMousePointer","onrendered","Whammy","Video","cloneNode","onloadedmetadata","muted","drawFrames","paused","isStopDrawing","asyncLoop","o","loop","functionToLoop","dropBlackFrames","_frames","_framesToCheck","_pixTolerance","_frameTolerance","localCanvas","context2d","resultFrames","checkUntilNotBlack","endCheckFrame","sampleColor","r","g","b","maxColorDifference","sqrt","pixTolerance","frameTolerance","doNotCheckNext","f","matchPixCount","endPixCheck","maxPixCount","finishImage","Image","imageData","getImageData","pix","currentColor","colorDifference","src","concat","_this","WhammyVideo","add","whammyInWebWorker","ArrayToWebM","info","checkFrames","clusterMaxDuration","doubleToString","frameNumber","clusterTimecode","clusterFrames","clusterDuration","clusterCounter","cluster","getClusterData","generateEBML","map","block","makeSimpleBlock","discardable","invisible","keyframe","lacing","trackNum","timecode","numToBuffer","num","parts","Uint8Array","reverse","strToBuffer","str","bitsToBuffer","bits","pad","join","substr","json","ebml","len","zeroes","sizeToString","padded","toBinStrOld","String","fromCharCode","flags","out","parseWebP","riff","VP8","RIFF","WEBP","frameStart","c","getStrLength","unpadded","parseRIFF","chunks","webm","atob","init","indexedDB","open","dbVersion","dbName","db","request","createObjectStore","dataBase","dataStoreName","putInDB","transaction","objectStore","put","getFromStore","portionName","get","onsuccess","onError","setVersion","onupgradeneeded","GIFEncoder","script","isHTMLObject","isLoadedMetaData","offsetWidth","offsetHeight","gifEncoder","setRepeat","setDelay","setQuality","onGifRecordingStarted","startTime","now","drawVideoFrame","time","clearedRecordedData","lastAnimationFrame","lastFrameTime","undefined","onGifPreview","addFrame","endTime","bin","autoplay","playsInline","MultiStreamsMixer","arrayOfMediaStreams","elementClass","videos","isStopDrawingFrames","opacity","position","zIndex","top","className","useGainNode","startDrawingFrames","drawVideosToCanvas","videosLength","fullcanvas","remaining","x","y","onRender","getMixedStream","mixedVideoStream","getMixedVideoStream","mixedAudioStream","getMixedAudioStream","resetVideoStreams","capturedStream","videoStream","audioContext","audioSources","gainNode","createGain","gain","value","audioTracksLength","audioSource","audioDestination","getVideo","appendStreams","streams","releaseStreams","source","clearRect","mixer","getAllVideoTracks","previewStream","tracks","addStreams","getMixer","RecordRTCPromisesHandler","recordRTC","Promise","resolve","reject","WritableStream","realtime","createBufferURL","finished","cameraStream","controller","cvs","first","onplaying","ctx","frameTimeout","cameraTimer","setInterval","clearInterval","onVideoProcessStarted","_controlledReadableStream","enqueue","fetch","then","arrayBuffer","addEventListener","timebaseDen","pipeTo","write","arrayOfBuffers"],"sourceRoot":"webpack:///"}